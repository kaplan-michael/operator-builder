{"components": {"schemas": {"ALMExample": {"additionalProperties": false, "description": "Specific information from the CSV requested by customer.", "properties": {"api_version": {"description": "", "type": "string"}, "kind": {"description": "", "type": "string"}, "metadata": {"additionalProperties": true, "description": "", "type": "object"}, "spec": {"additionalProperties": true, "description": "", "type": "object"}}, "type": "object"}, "ApiKey": {"additionalProperties": false, "description": "API key stored in Loki.", "properties": {"company_id": {"nullable": true, "type": "integer"}, "created": {"format": "date-time", "type": "string"}, "created_by": {"type": "string"}, "created_on_behalf_of": {"description": "Red Hat username from Red Hat SSO of user who requested the API key creation.", "nullable": true, "type": "string"}, "description": {"nullable": true, "type": "string"}, "id": {"type": "integer"}, "last_used": {"format": "date-time", "type": "string"}, "org_id": {"description": "Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect.", "type": "integer"}, "updated_on_behalf_of": {"description": "Red Hat username from Red Hat SSO of user who last updated the API key.", "nullable": true, "type": "string"}}, "type": "object"}, "ApiKeyOrgIDWithDescriptionRequest": {"additionalProperties": false, "description": "", "properties": {"description": {"example": "The key is created.", "type": "string"}, "org_id": {"type": "integer"}}, "type": "object"}, "ApiKeyResp": {"additionalProperties": false, "description": "", "properties": {"api_key": {"description": "Generated API key.", "type": "string"}, "key_data": {"$ref": "#/components/schemas/ApiKey", "description": "API key data."}}, "type": "object"}, "ArraySize": {"description": "Size of the array this field is named after.", "type": "integer"}, "Brew": {"additionalProperties": false, "description": "Brew Build System related metadata.", "properties": {"build": {"description": "Unique and immutable Brew build ID.", "type": "string"}, "completion_date": {"description": "Timestamp from Brew when the image has been succesfully built.", "format": "date-time", "type": "string"}, "nvra": {"description": "Multi-Arch primary key.", "type": "string"}, "package": {"description": "A package name in Brew.", "type": "string"}}, "type": "object"}, "CVE": {"additionalProperties": false, "description": "CVE fixed by an advisory.", "properties": {"id": {"description": "THIS FIELD IS REQUIRED. Unique identifier of the issue in the issue tracking system.", "type": "string"}, "url": {"description": "THIS FIELD IS REQUIRED. Publicly accessible URL of the issue information.", "format": "uri", "type": "string"}}, "type": "object"}, "CertProjectArtifact": {"additionalProperties": false, "description": "Contains the logs from the preflight test results from operator pipelines project", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "_links": {"additionalProperties": false, "description": "This field is read only.", "properties": {"cert_project": {"additionalProperties": false, "properties": {"href": {"description": "URI to this certification project.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_cert_projects_get_certification_project_by_id", "x-parameter-map": {"identifier": "cert_project"}}, "container_image": {"additionalProperties": false, "properties": {"href": {"description": "URI to the container image being tagged.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_images_get_image_by_id", "x-parameter-map": {"identifier": "image_id"}}}, "type": "object"}, "cert_project": {"description": "Cert Project Identifier. This field is read only.", "type": "string"}, "certification_hash": {"description": "The cert project hashed content.", "type": "string"}, "content": {"description": "THIS FIELD IS REQUIRED. Base64 encoded the cert project artifact content.", "type": "string"}, "content_type": {"description": "THIS FIELD IS REQUIRED. The content type associated with the content type.", "type": "string"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "file_size": {"description": "THIS FIELD IS REQUIRED. File size in bytes.", "type": "integer"}, "filename": {"description": "THIS FIELD IS REQUIRED. The file name associated with the content test results.", "type": "string"}, "image_id": {"description": "Identifier of container image collection.", "type": "string"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "operator_package_name": {"description": "The operator package name of the cert project artifact.", "type": "string"}, "org_id": {"description": "Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect. This field is read only.", "type": "integer"}, "pull_request_url": {"description": "URL to the Github pull request associated with with cert project.", "format": "uri", "type": "string"}, "version": {"description": "Content version.", "type": "string"}}, "type": "object"}, "CertProjectContacts": {"additionalProperties": false, "description": "Contact info.", "properties": {"email_address": {"description": "THIS FIELD IS REQUIRED.", "format": "email", "maxLength": 100, "minLength": 1, "type": "string"}, "type": {"description": "THIS FIELD IS REQUIRED. Only these values can be assigned: Technical contact.", "type": "string"}}, "type": "object"}, "CertProjectContainer": {"additionalProperties": false, "description": "Container related information.", "properties": {"_links": {"additionalProperties": false, "description": "This field is read only.", "properties": {"repositories": {"additionalProperties": false, "properties": {"href": {"description": "URI to this project's repositories. Associated via isv_pid.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_repos_get_repos", "x-parameter-map": {"filter": "isv_pid"}}, "repository": {"additionalProperties": false, "properties": {"href": {"description": "URI to this project's repository. Associated via registry and repository.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_repos_get_repo_by_path", "x-parameter-map": {"registry": "registry", "repository": "repository"}}}, "type": "object"}, "airgap_registry": {"description": "Indicates if the registry is air-gapped and its tags should not be synced. This field is read only.", "type": "boolean"}, "application_categories": {"description": "The application categories (types).", "items": {"description": "Only these values can be assigned: Accounting, AI / Machine learning, API Management, Application Delivery, Application Server, Automation, Backup & Recovery, Business Intelligence, Business Process Management, Capacity Management, Cloud Management, Collaboration/Groupware/Messaging, Configuration Management, Container Platform / Management, Content Management/Authoring, Customer Relationship Management, Database & Data Management, Data Store, Developer Tools, Enterprise Resource Planning, Identity Management, Integration, Logging & Metrics, Management, Messaging, Migration, Middleware, Mobile Application Development Platform (MADP), Monitoring, Network Management, Networking, Other, Operating System, Performance Management, Policy Enforcement, Programming Languages & Runtimes, Scheduling, Search, Security, Storage, Virtualization Platform, Web Services.", "type": "string"}, "maxItems": 3, "type": "array"}, "application_categories#": {"$ref": "#/components/schemas/ArraySize"}, "auto_publish": {"description": "Once a container is certified it is automatically published.", "type": "boolean"}, "build_categories": {"description": "This value of this field is related to certProject.type field. See ISV-2012. Only these values can be assigned: Standalone image, Component image, Operator image, Operator bundle.", "type": "string"}, "distribution_approval": {"description": "Distribution approval obtained. This field is read only.", "type": "boolean"}, "distribution_method": {"description": "Distribution method. Only these values can be assigned: non_registry, marketplace_only, rhcc, external.", "type": "string"}, "docker_config_json": {"description": "Docker config for operator registry projects. Value has to be a valid JSON.", "nullable": true, "type": "string"}, "github_usernames": {"description": "GitHub users authorized to submit a certification pull request.", "items": {"type": "string"}, "maxItems": 100, "minItems": 1, "nullable": true, "type": "array"}, "github_usernames#": {"$ref": "#/components/schemas/ArraySize"}, "hosted_registry": {"description": "Flag that indicates that project is using Red Hat hosted registry.", "type": "boolean"}, "isv_pid": {"description": "ID of the project in for ISV repositories. This field is read only.", "type": "string"}, "kube_objects": {"description": "Kubernetes objects for operator registry projects. Value has to be a valid YAML.", "nullable": true, "type": "string"}, "os_content_type": {"description": "OS Content Type. Only these values can be assigned: Red Hat Enterprise Linux, Red Hat Universal Base Image (UBI), Operator Bundle Image, Scratch Image.", "type": "string"}, "passed_rhcert": {"description": "Passed RH Cert. This field is read only.", "type": "boolean"}, "privileged": {"default": false, "description": "A container needs to run in a privileged state.", "type": "boolean"}, "registry": {"description": "Hostname of the registry where the repository can be accessed.\nExamples: registry.company.com assumes the default port, 443. registry.company.com:5000 repository path with optional port specified.\nIt is only applicable for projects with an 'external' distribution method.", "nullable": true, "type": "string"}, "registry_credentials": {"$ref": "#/components/schemas/RegistryCredentials", "description": "This field is read only."}, "registry_override_instruct": {"description": "Note: These instructions will be displayed in the Red Hat Container Catalog as is. Please modify the following template as it suits your needs.", "nullable": true, "type": "string"}, "release_category": {"description": "Release category. Only these values can be assigned: Generally Available, Beta, Tech Preview, Deprecated, Mixed.", "type": "string"}, "repository": {"description": "Path to the container repository as found in the registry.\n\nExamples:\npath/to/repository\nrepository\n\nThis field can only be edited when there are no published containers.\nIt is only applicable for projects with an 'external' distribution method.\n", "maxLength": 128, "minLength": 1, "nullable": true, "type": "string"}, "repository_description": {"description": "The repository description is displayed on the container\ncatalog repository overview page.\n", "maxLength": 32768, "minLength": 1, "nullable": true, "type": "string"}, "repository_name": {"description": "This should represent your product (or the component if your product consists of multiple containers)\nand a major version. For example, you could use names like jboss-server7, or agent5.\n\nThis value is only editable when there are no published containers in this project.\nIt is only applicable for projects that do not have the 'external' distribution method.\n", "maxLength": 64, "minLength": 1, "nullable": true, "type": "string"}, "short_description": {"description": "Short description of the container.", "maxLength": 140, "minLength": 1, "type": "string"}, "support_platforms": {"deprecated": true, "description": "Supported Platforms. | Deprecation reason: The field was deprecated since the Catalog is no longer displaying this information to users.", "items": {"description": "Only these values can be assigned: OpenShift Online, OpenShift Container Platform, OpenShift Dedicated.", "type": "string"}, "type": "array"}, "support_platforms#": {"$ref": "#/components/schemas/ArraySize"}, "type": {"description": "THIS FIELD IS REQUIRED. Container type.\nField is required, if project type is 'Container', and the field is immutable for Partners after creation. Only these values can be assigned: container, operator bundle image.", "type": "string"}}, "type": "object"}, "CertProjectHelmChart": {"additionalProperties": false, "description": "Helm chart related information.", "properties": {"application_categories": {"description": "The application categories (types).", "items": {"description": "Only these values can be assigned: Accounting, AI / Machine learning, API Management, Application Delivery, Application Server, Automation, Backup & Recovery, Business Intelligence, Business Process Management, Capacity Management, Cloud Management, Collaboration/Groupware/Messaging, Configuration Management, Container Platform / Management, Content Management/Authoring, Customer Relationship Management, Database & Data Management, Data Store, Developer Tools, Enterprise Resource Planning, Identity Management, Integration, Logging & Metrics, Management, Messaging, Migration, Middleware, Mobile Application Development Platform (MADP), Monitoring, Network Management, Networking, Other, Operating System, Performance Management, Policy Enforcement, Programming Languages & Runtimes, Scheduling, Search, Security, Storage, Virtualization Platform, Web Services.", "type": "string"}, "maxItems": 3, "type": "array"}, "application_categories#": {"$ref": "#/components/schemas/ArraySize"}, "chart_name": {"description": "THIS FIELD IS REQUIRED. The Helm Chart name as it will appear in GitHub.", "maxLength": 255, "nullable": true, "pattern": "^(?![-])[\\da-z-]+(?<![-])$", "type": "string"}, "distribution_instructions": {"description": "Instructions for users to access an externally distributed Helm Chart.", "maxLength": 10000, "minLength": 1, "nullable": true, "type": "string"}, "distribution_method": {"description": "THIS FIELD IS REQUIRED. How your Helm Chart is distributed. Only these values can be assigned: redhat, external, undistributed.", "type": "string"}, "github_pull_request": {"description": "URL to the user submitted github pull request for this project. This field is read only.", "format": "uri", "nullable": true, "type": "string"}, "github_usernames": {"description": "GitHub users authorized to submit a certification pull request.", "items": {"type": "string"}, "maxItems": 100, "minItems": 1, "nullable": true, "type": "array"}, "github_usernames#": {"$ref": "#/components/schemas/ArraySize"}, "long_description": {"description": "Long description of the Helm Chart.", "maxLength": 32768, "minLength": 1, "nullable": true, "type": "string"}, "ocp_versions": {"description": "OCP versions for this Helm Chart. This field is read only.", "items": {"type": "string"}, "type": "array"}, "ocp_versions#": {"$ref": "#/components/schemas/ArraySize"}, "public_pgp_key": {"description": "Base64 encoded PGP public key. Used to sign result submissions.", "maxLength": 10000, "minLength": 1, "nullable": true, "type": "string"}, "repository": {"description": "URL to the externally distributed Helm Chart repository. This is not used if the chart is distributed via Red Hat.", "format": "uri", "maxLength": 2048, "minLength": 1, "nullable": true, "type": "string"}, "short_description": {"description": "Short description of the Helm Chart.", "maxLength": 140, "minLength": 1, "nullable": true, "type": "string"}}, "type": "object"}, "CertProjectImageRequest": {"additionalProperties": false, "description": "Contain status and related metadata of a certProject image request.", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "_links": {"additionalProperties": false, "description": "This field is read only.", "properties": {"cert_project": {"additionalProperties": false, "properties": {"href": {"description": "URI to the certification project related to this image request.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_cert_projects_get_certification_project_by_id", "x-parameter-map": {"identifier": "cert_project"}}, "image": {"additionalProperties": false, "properties": {"href": {"description": "URI to the container image.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_images_get_image_by_id", "x-parameter-map": {"identifier": "image_id"}}}, "type": "object"}, "cert_project": {"description": "Unique identifier for the certification project. This field is read only.", "type": "string"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "image_id": {"description": "Container image id associated with the image request. When defined, manifest_list_digest is forbidden.", "type": "string"}, "images": {"description": "Images referenced by the manifest_list_digest.", "items": {"$ref": "#/components/schemas/SingleArchImage"}, "type": "array"}, "images#": {"$ref": "#/components/schemas/ArraySize"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "manifest_list_digest": {"description": "Manifest list digest for multi-arch images. When defined, image_id is forbidden.", "type": "string"}, "operation": {"description": "THIS FIELD IS REQUIRED. Operation performed during the image request. Operations containing 'manifest-list' can be performed only when manifest_list_digest is defined. Other operations can be combined only with image_id. Only these values can be assigned: publish, unpublish, sync-tags, delete, publish-manifest-list, unpublish-manifest-list, delete-manifest-list.", "type": "string"}, "org_id": {"description": "Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect. This field is read only.", "type": "integer"}, "status": {"default": "pending", "description": "The request status This field is read only. Only these values can be assigned: pending, in progress, failed, completed, aborted.", "type": "string"}, "status_message": {"description": "An explanatory message to a request status. This field is read only.", "type": "string"}}, "type": "object"}, "CertProjectMarketplace": {"additionalProperties": false, "description": "Marketplace related information.", "properties": {"enablement_status": {"description": "THIS FIELD IS REQUIRED. Only these values can be assigned: eligible, requested, approved, denied, ineligible.", "type": "string"}, "enablement_url": {"description": "This field is read only.", "format": "uri", "maxLength": 2048, "minLength": 1, "type": "string"}, "listing_url": {"description": "This field is read only.", "format": "uri", "maxLength": 2048, "minLength": 1, "type": "string"}, "published": {"description": "This field is read only.", "type": "boolean"}}, "type": "object"}, "CertProjectNonContainer": {"additionalProperties": false, "description": "Non-container project info.", "properties": {"source_system_id": {"description": "This field is read only.", "type": "string"}}, "type": "object"}, "CertProjectOpenStack": {"additionalProperties": false, "description": "OpenStack related information.", "properties": {"service": {"description": "OpenStack service type for test suite selection Only these values can be assigned: Neutron, Cinder, Manila.", "nullable": true, "type": "string"}}, "type": "object"}, "CertProjectRedhat": {"additionalProperties": false, "description": "Red Hat projects related information.", "properties": {"product_id": {"description": "Red Hat Product ID. This field is read only.", "nullable": true, "type": "integer"}, "product_name": {"description": "Red Hat product name.", "maxLength": 100, "nullable": true, "type": "string"}, "product_version": {"description": "Red Hat Product Version.", "nullable": true, "type": "string"}, "product_version_id": {"description": "Red Hat Product Version. This field is read only.", "nullable": true, "type": "integer"}}, "type": "object"}, "CertProjectSelfCertification": {"additionalProperties": false, "description": "Red Hat projects related information.", "properties": {"app_profiler": {"description": "Application Profiler. This field is read only.", "type": "boolean"}, "app_runs_on_app_type": {"description": "Application Runs on App Type. This field is read only.", "type": "boolean"}, "auth_login": {"description": "Whether the Self Certification Evidence URL requires a customer login. This field is read only.", "type": "boolean"}, "certification_url": {"description": "Self Certification Evidence URL. This field is read only.", "format": "uri", "nullable": true, "type": "string"}, "comm_support_on_app_type": {"description": "Can Commercially Support on App Type. This field is read only.", "type": "boolean"}, "requested": {"description": "Self Certification Requested. This field is read only.", "type": "boolean"}, "tsanet_member": {"description": "TsaNET Member. This field is read only.", "type": "boolean"}}, "type": "object"}, "CertProjectTestResult": {"additionalProperties": false, "description": "Contain certification test results of related certProject", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "_links": {"additionalProperties": false, "description": "This field is read only.", "properties": {"cert_project": {"additionalProperties": false, "properties": {"href": {"description": "URI to the certification project related to this tag request.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_cert_projects_get_certification_project_by_id", "x-parameter-map": {"identifier": "cert_project"}}, "container_image": {"additionalProperties": false, "properties": {"href": {"description": "URI to the container image being tagged.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_images_get_image_by_id", "x-parameter-map": {"identifier": "image_id"}}}, "type": "object"}, "cert_project": {"description": "Unique identifier for the certification project. This field is read only.", "type": "string"}, "certification_hash": {"description": "Hashed content for the certification project.", "type": "string"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "image": {"description": "Image associated with the test result.", "type": "string"}, "image_id": {"description": "Identifier of container image collection.", "type": "string"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "operator_package_name": {"description": "Operator package name associated with the test result.", "type": "string"}, "org_id": {"description": "Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect. This field is read only.", "type": "integer"}, "passed": {"description": "THIS FIELD IS REQUIRED. Whether or not the test has passed overall.", "type": "boolean"}, "pull_request": {"$ref": "#/components/schemas/PullRequest", "description": "Pull request of certification test results"}, "results": {"$ref": "#/components/schemas/Results", "description": "THIS FIELD IS REQUIRED. The test results stored in lists based on result status."}, "test_library": {"$ref": "#/components/schemas/TestLibrary", "description": "THIS FIELD IS REQUIRED. The test library of the test result."}, "tested_on": {"$ref": "#/components/schemas/TestedOn", "description": "A platform where tests were executed."}, "version": {"description": "Version associated with the content tested.", "type": "string"}}, "type": "object"}, "CertificationProject": {"additionalProperties": false, "description": "Contain Certification project data.", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "_links": {"additionalProperties": false, "description": "This field is read only.", "properties": {"vendor": {"additionalProperties": false, "properties": {"href": {"description": "URI to this project's owner.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_vendors_get_vendor_by_org_id", "x-parameter-map": {"org_id": "org_id"}}}, "type": "object"}, "badges": {"description": "Special certifications specific to the certification platform", "items": {"description": "Only these values can be assigned: cni, csi, cnf, vnf.", "type": "string"}, "maxItems": 1, "nullable": true, "type": "array"}, "badges#": {"$ref": "#/components/schemas/ArraySize"}, "certification_date": {"description": "Value is derived from last_update_date field during when the certification project is published. Before it or if project is again unpublished, the value is null. This field is read only.", "format": "date-time", "nullable": true, "type": "string"}, "certification_level": {"description": "The certification project can be certified on several levels. This field determines whether the content was certified by ISV partner who followed official Red Hat certification, or by vendor validation. This field is read only. Only these values can be assigned: Certified, Vendor validated.", "nullable": true, "type": "string"}, "certification_level_history": {"$ref": "#/components/schemas/FieldHistoryString", "description": "Tracks history for the `certification_level` field This field is read only."}, "certification_status": {"default": "Started", "description": "Certification Status. Only these values can be assigned: Started, Certification Checklist In Progress, Certification Completed, Certification Tests In Progress, In Progress, Published, Ready For Certification, Unpublished, Waiting for Container Image.", "type": "string"}, "certification_status_history": {"$ref": "#/components/schemas/FieldHistoryString", "description": "Tracks history for the `certification_status` field This field is read only."}, "certification_user": {"description": "Certification User. This field is read only.", "nullable": true, "type": "integer"}, "contacts": {"description": "Contacts for certification project.", "items": {"$ref": "#/components/schemas/CertProjectContacts"}, "type": "array"}, "contacts#": {"$ref": "#/components/schemas/ArraySize"}, "container": {"$ref": "#/components/schemas/CertProjectContainer"}, "created_on_behalf_of": {"description": "SSO username from the JWT - who created the entry or null if no JWT.", "nullable": true, "type": "string"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "helm_chart": {"$ref": "#/components/schemas/CertProjectHelmChart", "description": "Configuration specific to Helm Chart projects."}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "marketplace": {"$ref": "#/components/schemas/CertProjectMarketplace"}, "name": {"description": "THIS FIELD IS REQUIRED. The owner provided name of the certification project.", "maxLength": 255, "minLength": 1, "type": "string"}, "non_container": {"$ref": "#/components/schemas/CertProjectNonContainer", "description": "This field is read only."}, "openstack": {"$ref": "#/components/schemas/CertProjectOpenStack", "description": "Configuration specific to OpenStack projects."}, "operator_distribution": {"description": "Operator Distribution. Only these values can be assigned: connect, marketplace, undistributed.", "type": "string"}, "org_id": {"description": "THIS FIELD IS REQUIRED. Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect. This field is read only.", "nullable": false, "type": "integer"}, "product_listings": {"description": "Unique identifier for the product listing. This field is read only.", "items": {"type": "string"}, "type": "array"}, "product_listings#": {"$ref": "#/components/schemas/ArraySize"}, "project_status": {"description": "THIS FIELD IS REQUIRED. Status of the certification project. Only these values can be assigned: active, archived.", "type": "string"}, "published_by": {"description": "Who published the certification project. This field is read only. Only these values can be assigned: Red Hat, Partner.", "nullable": true, "type": "string"}, "redhat": {"$ref": "#/components/schemas/CertProjectRedhat", "nullable": true}, "self_certification": {"$ref": "#/components/schemas/CertProjectSelfCertification", "description": "This field is read only.", "nullable": true}, "type": {"description": "THIS FIELD IS REQUIRED. Certification project type. Only these values can be assigned: Containers, Helm Chart, OpenShift-cnf, OpenStack-infra-container, OpenStack-infra-noncontainer, OpenStack-vnf, OpenStack-app-container, RHEL.", "type": "string"}, "updated_on_behalf_of": {"description": "SSO username from the JWT - who updated the entry or null if no JWT.", "nullable": true, "type": "string"}}, "type": "object"}, "ComponentEvidence": {"additionalProperties": false, "description": "Provides the ability to document evidence collected through various forms of extraction or analysis.", "properties": {"copyright": {"description": "Component evidence copyright data.", "items": {"$ref": "#/components/schemas/ComponentEvidenceCopyright"}, "type": "array"}, "copyright#": {"$ref": "#/components/schemas/ArraySize"}, "licenses": {"description": "Component evidence license data.", "items": {"$ref": "#/components/schemas/ComponentEvidenceLicenses"}, "type": "array"}, "licenses#": {"$ref": "#/components/schemas/ArraySize"}}, "type": "object"}, "ComponentEvidenceCopyright": {"additionalProperties": false, "description": "Copyright data.", "properties": {"text": {"description": "THIS FIELD IS REQUIRED. Copyright text.", "type": "string"}}, "type": "object"}, "ComponentEvidenceLicenses": {"additionalProperties": false, "description": "Component evidence license data.", "properties": {"license": {"$ref": "#/components/schemas/EvidenceLicensesLicense", "description": "License data."}}, "type": "object"}, "ComponentExternalReference": {"additionalProperties": false, "description": "External references provide a way to document systems, sites, and information that may be relevant but which are not included with the BOM.", "properties": {"comment": {"description": "An optional comment describing the external reference.", "type": "string"}, "hashes": {"description": "The hashes of the external reference (if applicable).", "items": {"$ref": "#/components/schemas/ExternalReferenceHash"}, "type": "array"}, "hashes#": {"$ref": "#/components/schemas/ArraySize"}, "type": {"description": "THIS FIELD IS REQUIRED. Specifies the type of external reference. There are built-in types to describe common references. If a type does not exist for the reference being referred to, use the other type. Only these values can be assigned: vcs, issue-tracker, website, advisories, bom, mailing-list, social, chat, documentation, support, distribution, license, build-meta, build-system, release-notes, other.", "type": "string"}, "url": {"description": "THIS FIELD IS REQUIRED. The URL to the external reference.", "type": "string"}}, "type": "object"}, "ComponentHash": {"additionalProperties": false, "description": "Component hash.", "properties": {"alg": {"description": "THIS FIELD IS REQUIRED. Hash algorithm. Only these values can be assigned: MD5, SHA-1, SHA-256, SHA-384, SHA-512, SHA3-256, SHA3-384, SHA3-512, BLAKE2b-256, BLAKE2b-384, BLAKE2b-512, BLAKE3.", "type": "string"}, "content": {"description": "THIS FIELD IS REQUIRED. Hash.", "pattern": "^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$", "type": "string"}}, "type": "object"}, "ComponentLicense": {"additionalProperties": false, "description": "Component license - defined as 'license(obj)' or 'expression(str)' exclusively.", "properties": {"expression": {"description": "SPDX License expression", "type": "string"}, "license": {"$ref": "#/components/schemas/License", "description": "License data."}}, "type": "object"}, "ComponentLicenseText": {"additionalProperties": false, "description": "An optional way to include the textual content of a license.", "properties": {"content": {"description": "THIS FIELD IS REQUIRED. The attachment data. Proactive controls such as input validation and sanitization should be employed to prevent misuse of attachment text.", "type": "string"}, "content_type": {"default": "text/plain", "description": "Specifies the content type of the text. Defaults to text/plain if not specified.", "type": "string"}, "encoding": {"description": "Specifies the optional encoding the text is represented in. Only these values can be assigned: base64.", "type": "string"}}, "type": "object"}, "ComponentProperties": {"additionalProperties": false, "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the CycloneDX Property Taxonomy (https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is OPTIONAL.", "properties": {"name": {"description": "The name of the property. Duplicate names are allowed, each potentially having a different value.", "type": "string"}, "value": {"description": "The value of the property.", "type": "string"}}, "type": "object"}, "ComponentReleaseNotes": {"additionalProperties": false, "description": "Specifies optional release notes.", "properties": {"aliases": {"description": "One or more alternate names the release may be referred to. This may include unofficial terms used by development and marketing teams (e.g. code names).", "items": {"type": "string"}, "type": "array"}, "aliases#": {"$ref": "#/components/schemas/ArraySize"}, "description": {"description": "A short description of the release.", "type": "string"}, "featured_image": {"description": "The URL to an image that may be prominently displayed with the release note.", "format": "uri", "type": "string"}, "notes": {"description": "Zero or more release notes containing the locale and content. Multiple note objects may be specified to support release notes in a wide variety of languages.", "items": {"$ref": "#/components/schemas/ReleaseNotesNotes"}, "type": "array"}, "notes#": {"$ref": "#/components/schemas/ArraySize"}, "properties": {"description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the CycloneDX Property Taxonomy. Formal registration is OPTIONAL.", "items": {"$ref": "#/components/schemas/ReleaseNotesProperties"}, "type": "array"}, "properties#": {"$ref": "#/components/schemas/ArraySize"}, "resolves": {"description": "A collection of issues that have been resolved.", "items": {"$ref": "#/components/schemas/ReleaseNotesResolves"}, "type": "array"}, "resolves#": {"$ref": "#/components/schemas/ArraySize"}, "social_image": {"description": "The URL to an image that may be used in messaging on a social media platforms.", "format": "uri", "type": "string"}, "tags": {"description": "One or more tags that may aid in search or retrieval of the release note.", "items": {"type": "string"}, "type": "array"}, "tags#": {"$ref": "#/components/schemas/ArraySize"}, "timestamp": {"description": "The date and time (timestamp) when the release note was created.", "type": "string"}, "title": {"description": "The title of the release.", "type": "string"}, "type": {"description": "THIS FIELD IS REQUIRED. The software versioning type the release note describes.", "type": "string"}}, "type": "object"}, "ComponentSwid": {"additionalProperties": false, "description": "Specifies metadata and content for ISO-IEC 19770-2 Software Identification (SWID) Tags. https://www.iso.org/standard/65666.html", "properties": {"name": {"description": "THIS FIELD IS REQUIRED. Maps to the name of a SoftwareIdentity.", "type": "string"}, "patch": {"default": false, "description": "Maps to the patch of a SoftwareIdentity", "type": "boolean"}, "tag_id": {"description": "THIS FIELD IS REQUIRED. Maps to the tagId of a softwareIdentity", "type": "string"}, "tag_version": {"default": 0, "description": "Maps to the tagVersion of a SoftwareIdentity", "type": "integer"}, "text": {"$ref": "#/components/schemas/SwidText", "description": "Specifies the metadata and content of the SWID tag."}, "url": {"description": "The URL to the SWID file.", "format": "uri", "type": "string"}, "version": {"default": "0.0", "description": "Maps to the version of a SoftwareIdentity", "type": "string"}}, "type": "object"}, "ContactsItems": {"additionalProperties": false, "description": "", "properties": {"email_address": {"format": "email", "maxLength": 100, "minLength": 1, "type": "string"}, "type": {"description": "Only these values can be assigned: Marketing contact, Technical contact.", "type": "string"}}, "type": "object"}, "ContainerFile": {"additionalProperties": false, "description": "", "properties": {"content": {"nullable": true, "type": "string"}, "filename": {"description": "THIS FIELD IS REQUIRED.", "type": "string"}, "key": {"description": "THIS FIELD IS REQUIRED.", "type": "string"}}, "type": "object"}, "ContainerGrades": {"additionalProperties": false, "description": "Grades are describing security risk with containers that Red Hat provides through the Red Hat Ecosystem Catalog.", "properties": {"_links": {"additionalProperties": false, "description": "This field is read only.", "properties": {"image": {"additionalProperties": false, "properties": {"href": {"description": "URI to the container image.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_images_get_image_by_id", "x-parameter-map": {"identifier": "image_id"}}}, "type": "object"}, "architecture": {"description": "THIS FIELD IS REQUIRED. Image architecture.", "type": "string"}, "current_grade": {"description": "THIS FIELD IS REQUIRED. Current image security grade based on current date and grading schedule. Only these values can be assigned: A, B, C, D, E, F.", "nullable": true, "type": "string"}, "freshness_grades": {"description": "THIS FIELD IS REQUIRED. the grade based on applicable updates and time provided by PST CVE engine. This field is read only.", "items": {"$ref": "#/components/schemas/FreshnessGrade"}, "type": "array"}, "freshness_grades#": {"$ref": "#/components/schemas/ArraySize"}, "image_id": {"description": "THIS FIELD IS REQUIRED. Unique identifier for image.", "type": "string"}, "next_drop_date": {"description": "A date when current grade drops.", "format": "date-time", "type": "string"}, "tag": {"description": "THIS FIELD IS REQUIRED. Name of floating tag associated with the image.", "type": "string"}}, "type": "object"}, "ContainerGrading": {"additionalProperties": false, "description": "Information about the state of grading of particular image.", "properties": {"exception_approved": {"description": "Indication that freshness grade check is ignored or not during a publication process", "type": "boolean"}, "exception_approved_description": {"description": "Description and reference to a Jira ticket with an approved exception", "type": "string"}, "status": {"default": "pending", "description": "The request status This field is read only. Only these values can be assigned: pending, in progress, failed, completed, aborted.", "type": "string"}, "status_message": {"description": "An explanatory message to a request status. This field is read only.", "type": "string"}}, "type": "object"}, "ContainerImage": {"additionalProperties": false, "description": "Metadata about images contained in RedHat and ISV repositories", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "_links": {"additionalProperties": false, "description": "This field is read only.", "properties": {"artifacts": {"additionalProperties": false, "properties": {"href": {"description": "URI to the images's artifacts.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_cert_project_artifacts_get_certification_artifacts_by_image_id", "x-parameter-map": {"identifier": "_id"}}, "requests": {"additionalProperties": false, "properties": {"href": {"description": "URI to the images requests.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_cert_project_image_request_get_certification_image_requests_by_image_id", "x-parameter-map": {"identifier": "_id"}}, "rpm_manifest": {"additionalProperties": false, "properties": {"href": {"description": "URI to the images's rpm manifest.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_rpm_manifests_get_rpm_manifest_for_image", "x-parameter-map": {"identifier": "_id"}}, "test_results": {"additionalProperties": false, "properties": {"href": {"description": "URI to the images's test results.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_cert_project_test_result_get_certification_test_results_by_image_id", "x-parameter-map": {"identifier": "_id"}}, "vulnerabilities": {"additionalProperties": false, "properties": {"href": {"description": "URI to the images's vulnerabilities.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_vulnerabilities_get_vulnerabilities_by_image_id", "x-parameter-map": {"identifier": "_id"}}}, "type": "object"}, "architecture": {"description": "THIS FIELD IS REQUIRED. The field contains an architecture for which the container image was built for. Value is used to distinguish between the default x86-64 architecture and other architectures. If the value is not set, the image was built for the x86-64 architecture. Only these values can be assigned: amd64, arm64, ppc64le, s390x.", "type": "string"}, "brew": {"$ref": "#/components/schemas/Brew", "description": "Brew related metadata."}, "certified": {"description": "THIS FIELD IS REQUIRED. Indication if the image was certified.", "type": "boolean"}, "cloud_service": {"description": "Indication that image was created by the CPaaS managed service pipeline.", "type": "boolean"}, "container_grades": {"$ref": "#/components/schemas/ContainerGrading", "description": "Information about the state of grading of particular image. This field is read only."}, "content_manifest": {"$ref": "#/components/schemas/ContainerImageContentManifest", "description": "Subset of data from contentManifest. This field is read only."}, "content_sets": {"description": "A list of all content sets (YUM repositories) from where an image RPM content is.", "items": {"type": "string"}, "type": "array"}, "content_sets#": {"$ref": "#/components/schemas/ArraySize"}, "cpe_ids": {"description": "A mapping of applicable advisories to RPM NEVRA. This data is required for scoring.", "items": {"type": "string"}, "type": "array"}, "cpe_ids#": {"$ref": "#/components/schemas/ArraySize"}, "cpe_ids_rh_base_images": {"description": "A mapping of applicable advisories for the base_images from the Red Hat repositories.", "items": {"type": "string"}, "type": "array"}, "cpe_ids_rh_base_images#": {"$ref": "#/components/schemas/ArraySize"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "deleted": {"description": "Indicates that an image was removed. Only unpublished images can be removed.", "type": "boolean"}, "docker_image_digest": {"description": "Docker Image Digest. For Docker 1.10+ this is also known as the 'manifest digest'.", "type": "string"}, "docker_image_id": {"description": "Docker Image ID. For Docker 1.10+ this is also known as the 'config digest'.", "type": "string"}, "freshness_grades": {"description": "The grade based on applicable updates and time provided by PST CVE engine. This field is read only.", "items": {"$ref": "#/components/schemas/FreshnessGrade"}, "type": "array"}, "freshness_grades#": {"$ref": "#/components/schemas/ArraySize"}, "image_id": {"description": "Image manifest digest.\nBe careful, as this value is not unique among container image entries, as one image can be references several times.", "type": "string"}, "isv_pid": {"description": "ID of the project in for ISV repositories. The ID can be also used to connect vendor to the image.", "type": "string"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "object_type": {"description": "Only these values can be assigned: containerImage.", "type": "string"}, "parsed_data": {"$ref": "#/components/schemas/ParsedData", "description": "Data parsed from image metadata.\nThese fields are not computed from any other source."}, "raw_config": {"description": "Raw image configuration, such as output from docker inspect.", "type": "string"}, "repositories": {"description": "THIS FIELD IS REQUIRED. Published repositories associated with the container image.", "items": {"$ref": "#/components/schemas/ContainerImageRepo"}, "type": "array"}, "repositories#": {"$ref": "#/components/schemas/ArraySize"}, "sum_layer_size_bytes": {"description": "The total size of the sum of all layers for each image in bytes. This is computed externally and may not match what is reported by the image metadata (see parsed_data.size).", "type": "integer"}, "top_layer_id": {"description": "Field for multiarch primary key", "type": "string"}, "uncompressed_top_layer_id": {"description": "Hash (sha256) of the uncompressed top layer for this image (should be same value as - parsed_data.uncompressed_layer_sizes.0.layer_id)", "type": "string"}}, "type": "object"}, "ContainerImageContentManifest": {"additionalProperties": false, "description": "Subset of data from contentManifest.", "properties": {"_id": {"description": "ID of the contentManifest. This field is read only.", "type": "string"}}, "type": "object"}, "ContainerImageManifestDigest": {"additionalProperties": false, "description": "List of container images per manifest list digest", "properties": {"images": {"description": "List of images for given manifest list digest.", "items": {"$ref": "#/components/schemas/ContainerImage"}, "type": "array"}, "images#": {"$ref": "#/components/schemas/ArraySize"}, "manifest_list_digest": {"description": "Manifest list digest for multiarch images.", "type": "string"}}, "type": "object"}, "ContainerImageRPMManifest": {"additionalProperties": false, "description": "A containerImageRPMManifest contains all the RPM packages for a given containerImage", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "_links": {"additionalProperties": false, "description": "This field is read only.", "properties": {"image": {"additionalProperties": false, "properties": {"href": {"description": "URI to the container image.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_images_get_image_by_id", "x-parameter-map": {"identifier": "image_id"}}}, "type": "object"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "image_id": {"description": "THIS FIELD IS REQUIRED. The foreign key to containerImage._id.", "type": "string"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "object_type": {"description": "Only these values can be assigned: containerImageRPMManifest.", "type": "string"}, "rpms": {"description": "Content manifest of this image. RPM content included in the image.", "items": {"$ref": "#/components/schemas/RpmsItems"}, "type": "array"}, "rpms#": {"$ref": "#/components/schemas/ArraySize"}}, "type": "object"}, "ContainerImageRepo": {"additionalProperties": false, "description": "", "properties": {"_links": {"additionalProperties": false, "description": "This field is read only.", "properties": {"image_advisory": {"additionalProperties": false, "properties": {"href": {"description": "URI to the image advisory.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_advisories_get_advisory_by_id", "x-parameter-map": {"identifier": "image_advisory_id"}}, "repository": {"additionalProperties": false, "properties": {"href": {"description": "URI to the repository definition.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_repos_get_repo_by_path", "x-parameter-map": {"registry": "registry", "repository": "repository"}}}, "type": "object"}, "comparison": {"$ref": "#/components/schemas/ContainerImageRepoComparison", "description": "Store information about image comparison."}, "content_advisory_ids": {"description": "The _id's of the redHatContainerAdvisory that contains the content advisories.", "items": {"type": "string"}, "type": "array"}, "content_advisory_ids#": {"$ref": "#/components/schemas/ArraySize"}, "image_advisory_id": {"description": "The _id of the redHatContainerAdvisory that contains the image advisory.", "type": "string"}, "manifest_list_digest": {"description": "Available for multiarch images.", "type": "string"}, "manifest_schema2_digest": {"description": "Available for single arch images.", "type": "string"}, "published": {"description": "THIS FIELD IS REQUIRED. Indicate if the image has been published to the container catalog.", "type": "boolean"}, "published_date": {"description": "Date the image was published to the container catalog.", "format": "date-time", "type": "string"}, "push_date": {"description": "When the image was pushed to this repository. For RH images this is picked from first found of advisory ship_date, brew completion_date, and finally repositories publish_date. For ISV images this replicates value of published_date.", "format": "date-time", "type": "string"}, "registry": {"description": "THIS FIELD IS REQUIRED. Hostname of the registry where the repository can be accessed.", "type": "string"}, "repository": {"description": "THIS FIELD IS REQUIRED. Repository name.", "type": "string"}, "signatures": {"description": "Image signing info.", "items": {"$ref": "#/components/schemas/SignatureInfo"}, "type": "array"}, "signatures#": {"$ref": "#/components/schemas/ArraySize"}, "tags": {"description": "THIS FIELD IS REQUIRED. List of container tags assigned to this layer.", "items": {"$ref": "#/components/schemas/ContainerImageRepoTag"}, "type": "array"}, "tags#": {"$ref": "#/components/schemas/ArraySize"}}, "type": "object"}, "ContainerImageRepoComparison": {"additionalProperties": false, "description": "", "properties": {"advisory_rpm_mapping": {"description": "Mapping of a NVRA to multiple advisories IDs.", "items": {"$ref": "#/components/schemas/ContainerImageRepoComparisonMapping"}, "type": "array"}, "advisory_rpm_mapping#": {"$ref": "#/components/schemas/ArraySize"}, "reason": {"description": "Reason why 'with_nvr' is or is not null.", "type": "string"}, "reason_text": {"description": "Human readable reason.", "type": "string"}, "rpms": {"$ref": "#/components/schemas/ContainerImageRepoComparisonRPMs", "description": "List of rpms grouped by category (new, remove, upgrade, downgrade)."}, "with_nvr": {"description": "NVR of image which this image was compared with.", "type": "string"}}, "type": "object"}, "ContainerImageRepoComparisonMapping": {"additionalProperties": false, "description": "", "properties": {"advisory_ids": {"description": "THIS FIELD IS REQUIRED. Content advisory ID.", "items": {"type": "string"}, "minItems": 1, "type": "array"}, "advisory_ids#": {"$ref": "#/components/schemas/ArraySize"}, "nvra": {"description": "NVRA of the RPM related to advisories.", "type": "string"}}, "type": "object"}, "ContainerImageRepoComparisonRPMs": {"additionalProperties": false, "description": "", "properties": {"downgrade": {"description": "List of NVRA which were downgraded in this image.", "items": {"type": "string"}, "type": "array"}, "downgrade#": {"$ref": "#/components/schemas/ArraySize"}, "new": {"description": "List of NVRA which were added to this image.", "items": {"type": "string"}, "type": "array"}, "new#": {"$ref": "#/components/schemas/ArraySize"}, "remove": {"description": "List of NVRA which were removed in this image.", "items": {"type": "string"}, "type": "array"}, "remove#": {"$ref": "#/components/schemas/ArraySize"}, "upgrade": {"description": "List of NVRA which were upgraded in this image.", "items": {"type": "string"}, "type": "array"}, "upgrade#": {"$ref": "#/components/schemas/ArraySize"}}, "type": "object"}, "ContainerImageRepoTag": {"additionalProperties": false, "description": "", "properties": {"_links": {"additionalProperties": false, "description": "This field is read only.", "properties": {"tag_history": {"additionalProperties": false, "properties": {"href": {"description": "Reference to the tag history.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_tag_history_get_tag_history_by_tag_name", "x-parameter-map": {"registry": "parent.registry", "repository": "parent.repository", "tag": "name"}}}, "type": "object"}, "added_date": {"description": "THIS FIELD IS REQUIRED.", "format": "date-time", "type": "string"}, "manifest_schema1_digest": {"description": "Available when manifest_schema2_digest is not. All legacy images.", "type": "string"}, "name": {"description": "THIS FIELD IS REQUIRED. The name of the tag.", "type": "string"}, "removed_date": {"description": "Date this tag was removed from the image in this repo. If the tag is added back, add a new entry in 'tags' array.", "format": "date-time", "type": "string"}}, "type": "object"}, "ContainerImageVulnerability": {"additionalProperties": false, "description": "Vulnerability present in the content that is installed in the image.", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "advisory_id": {"description": "THIS FIELD IS REQUIRED. Advisory identifier.", "pattern": "^\\d{4}:\\d{4}$", "type": "string"}, "advisory_type": {"description": "THIS FIELD IS REQUIRED. Advisory type (RHSA, RHBA, ...).", "type": "string"}, "affected_packages": {"description": "List of packages affected by this CVE.", "items": {"$ref": "#/components/schemas/ContainerImageVulnerabilityAffectedPackage"}, "type": "array"}, "affected_packages#": {"$ref": "#/components/schemas/ArraySize"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "cve_id": {"description": "THIS FIELD IS REQUIRED. ID of the CVE.", "pattern": "^CVE-\\d{4}-\\d{4,}$", "type": "string"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "object_type": {"description": "Only these values can be assigned: containerImageVulnerability.", "type": "string"}, "packages": {"description": "Array of package information applicable to this CVE. This array was superseded by affected_packages array.", "items": {"$ref": "#/components/schemas/ContainerImageVulnerabilityPackage"}, "type": "array"}, "packages#": {"$ref": "#/components/schemas/ArraySize"}, "public_date": {"description": "THIS FIELD IS REQUIRED. Date the CVE was made public.", "type": "string"}, "severity": {"description": "THIS FIELD IS REQUIRED. CVE severity. Only these values can be assigned: Low, Moderate, Important, Critical.", "type": "string"}}, "type": "object"}, "ContainerImageVulnerabilityAffectedPackage": {"additionalProperties": false, "description": "Information about package affected by the CVE.", "properties": {"arch": {"description": "THIS FIELD IS REQUIRED. Package architecture. Only these values can be assigned: x86_64, i686, s390x, ppc64le, aarch64, arm64, noarch.", "type": "string"}, "name": {"description": "THIS FIELD IS REQUIRED. The name of the package.", "type": "string"}, "package_type": {"description": "THIS FIELD IS REQUIRED. Package type. Only these values can be assigned: rpm, other.", "type": "string"}, "version": {"description": "THIS FIELD IS REQUIRED. Package version.", "type": "string"}}, "type": "object"}, "ContainerImageVulnerabilityFixedByImage": {"additionalProperties": false, "description": "The image that fixes the vulnerability.", "properties": {"_links": {"additionalProperties": false, "description": "This field is read only.", "properties": {"image": {"additionalProperties": false, "properties": {"href": {"description": "", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_images_get_image_by_id", "x-parameter-map": {"identifier": "id"}}}, "type": "object"}, "id": {"description": "THIS FIELD IS REQUIRED. The _id of the image that fixes the vulnerability.", "type": "string"}, "repositories": {"description": "The data is denormalized to not require lookup in UI.\n\nRISK: could get out of sync with real refrenced data.\n", "items": {"$ref": "#/components/schemas/ContainerImageVulnerabilityFixedByRepository"}, "minItems": 1, "type": "array"}, "repositories#": {"$ref": "#/components/schemas/ArraySize"}}, "type": "object"}, "ContainerImageVulnerabilityFixedByRepository": {"additionalProperties": false, "description": "", "properties": {"registry": {"description": "", "type": "string"}, "repository": {"description": "", "type": "string"}, "tags": {"description": "", "items": {"$ref": "#/components/schemas/ContainerImageVulnerabilityTag"}, "minItems": 1, "type": "array"}, "tags#": {"$ref": "#/components/schemas/ArraySize"}}, "type": "object"}, "ContainerImageVulnerabilityPackage": {"additionalProperties": false, "description": "Package information applicable to this CVE.", "properties": {"fixed_by_image": {"$ref": "#/components/schemas/ContainerImageVulnerabilityFixedByImage", "description": "The next image that fixes this vulnerability."}, "rpm_nvra": {"description": "THIS FIELD IS REQUIRED. RPMs, identified by their RPM NVRA, that are present in the image and vulnerable.", "items": {"type": "string"}, "minItems": 1, "type": "array"}, "rpm_nvra#": {"$ref": "#/components/schemas/ArraySize"}, "srpm_nevra": {"description": "THIS FIELD IS REQUIRED. The source RPM that contains the fix.", "type": "string"}}, "type": "object"}, "ContainerImageVulnerabilityTag": {"additionalProperties": false, "description": "", "properties": {"name": {"description": "THIS FIELD IS REQUIRED.", "type": "string"}}, "type": "object"}, "ContainerRepository": {"additionalProperties": false, "description": "Contains metadata associated with Red Hat and ISV repositories", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "_links": {"additionalProperties": false, "description": "This field is read only.", "properties": {"certification_project": {"additionalProperties": false, "properties": {"href": {"description": "URI to the certification projects.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_cert_projects_get_certification_project_by_repo", "x-parameter-map": {"registry": "registry", "repository": "repository"}}, "images": {"additionalProperties": false, "properties": {"href": {"description": "URI to this repository's images.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_images_get_images_by_repo", "x-parameter-map": {"registry": "registry", "repository": "repository"}}, "operator_bundles": {"additionalProperties": false, "properties": {"href": {"description": "URI to this repository's operator bundles.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_operators_get_operator_bundles_by_registry_path", "x-parameter-map": {"registry": "registry", "repository": "repository"}}, "product_listings": {"additionalProperties": false, "properties": {"href": {"description": "URI to this repository's product listings.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_product_listings_find_product_listings_by_repo_path", "x-parameter-map": {"registry": "registry", "repository": "repository"}}, "replaced_by_repository": {"additionalProperties": false, "properties": {"href": {"description": "URI to the replacing repository.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_repos_get_repo_by_path", "x-parameter-map": {"registry": "registry", "repository": "replaced_by_repository_name"}}, "vendor": {"additionalProperties": false, "properties": {"href": {"description": "URI to this repository's vendor.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_vendors_get_vendor_by_label", "x-parameter-map": {"label": "vendor_label"}}}, "type": "object"}, "application_categories": {"description": "THIS FIELD IS REQUIRED. The application categories (types).", "items": {"description": "Only these values can be assigned: Accounting, AI / Machine learning, API Management, Application Delivery, Application Server, Automation, Backup & Recovery, Business Intelligence, Business Process Management, Capacity Management, Cloud Management, Collaboration/Groupware/Messaging, Configuration Management, Container Platform / Management, Content Management/Authoring, Customer Relationship Management, Database & Data Management, Data Store, Developer Tools, Enterprise Resource Planning, Identity Management, Integration, Logging & Metrics, Management, Messaging, Migration, Middleware, Mobile Application Development Platform (MADP), Monitoring, Network Management, Networking, Other, Operating System, Performance Management, Policy Enforcement, Programming Languages & Runtimes, Scheduling, Search, Security, Storage, Virtualization Platform, Web Services.", "type": "string"}, "maxItems": 3, "type": "array"}, "application_categories#": {"$ref": "#/components/schemas/ArraySize"}, "architectures": {"description": "Contains unique list of all container architectures for the given repository.", "items": {"type": "string"}, "type": "array"}, "architectures#": {"$ref": "#/components/schemas/ArraySize"}, "auto_rebuild_tags": {"description": "Denote which tags to be used for auto-rebuilding processes.", "items": {"type": "string"}, "type": "array"}, "auto_rebuild_tags#": {"$ref": "#/components/schemas/ArraySize"}, "build_categories": {"description": "THIS FIELD IS REQUIRED. What build categories does this fall into, such as standalone, s2i builder, etc.", "items": {"description": "Only these values can be assigned: Operator bundle, Operator image, Standalone image, Component image, Builder image, Intermediate image, Flatpak, Scratch image, Automation execution environment, Ansible playbook bundle.", "type": "string"}, "maxItems": 1, "type": "array"}, "build_categories#": {"$ref": "#/components/schemas/ArraySize"}, "can_auto_release_cve_rebuild": {"description": "Flag indicating whether the repository has opted-in to auto-release auto-built images.", "type": "boolean"}, "cdn_base_url": {"format": "uri", "type": "string"}, "content_stream_grades": {"description": "Capture and provide an inventory of grades corresponding to the tags in the relevant contents stream.", "items": {"$ref": "#/components/schemas/RepositoryContentStreamGrades"}, "type": "array"}, "content_stream_grades#": {"$ref": "#/components/schemas/ArraySize"}, "content_stream_tags": {"description": "Capture and provide an inventory of tags corresponding to the content streams.", "items": {"type": "string"}, "type": "array"}, "content_stream_tags#": {"$ref": "#/components/schemas/ArraySize"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "description": {"description": "Description of the repository.", "type": "string"}, "display_data": {"$ref": "#/components/schemas/RepositoryDisplayData", "description": "THIS FIELD IS REQUIRED."}, "documentation_links": {"description": "Links to marketing and doc collateral including categorization (solution brief, white paper, demo video, etc.) supposed to be displayed on the product page (NOT documentation tab on image overview tab).", "items": {"$ref": "#/components/schemas/RepositoryDocumentationLink"}, "type": "array"}, "documentation_links#": {"$ref": "#/components/schemas/ArraySize"}, "eol_date": {"format": "date-time", "type": "string"}, "fbc_opt_in": {"default": false, "description": "Flag indicating which team has opted-in to use the File Based Catalog. This field is read only.", "type": "boolean"}, "freshness_grades_unknown_until_date": {"description": "Date until the freshness grades for this repository are unknown.", "format": "date-time", "nullable": true, "type": "string"}, "includes_multiple_content_streams": {"description": "THIS FIELD IS REQUIRED. Defines  whether a repository contains multiple image streams.", "type": "boolean"}, "is_community_supported": {"description": "Designates whether a repository is community-supported.", "type": "boolean"}, "isv_pid": {"description": "ID of the project in for ISV repositories.", "type": "string"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "marketplace": {"$ref": "#/components/schemas/ContainerRepositoryMarketplace", "description": "Marketplace related information."}, "metadata_source": {"description": "Determine what registry should be used as source of repository metadata (e.g. Pulp or Quay).", "type": "string"}, "metrics": {"$ref": "#/components/schemas/RepositoryMetrics", "description": "Set of metrics about the repository."}, "namespace": {"description": "Namespace of the repository.", "type": "string"}, "non_production_only": {"description": "THIS FIELD IS REQUIRED. Repository is intended for non-production use only.", "type": "boolean"}, "object_type": {"description": "Only these values can be assigned: containerRepository.", "type": "string"}, "privileged_images_allowed": {"description": "THIS FIELD IS REQUIRED. Indicates if images in this repository are allowed to run super-privileged.", "type": "boolean"}, "prm_project_id": {"description": "ID of the project in PRM. Only for ISV repositories.", "type": "string"}, "product_listings": {"description": "List of unique identifiers for the product listings. This field is read only.", "items": {"type": "string"}, "type": "array"}, "product_listings#": {"$ref": "#/components/schemas/ArraySize"}, "product_versions": {"description": "Map repositories to specific product versions.", "items": {"type": "string"}, "type": "array"}, "product_versions#": {"$ref": "#/components/schemas/ArraySize"}, "protected_for_pull": {"description": "THIS FIELD IS REQUIRED.", "type": "boolean"}, "protected_for_search": {"description": "THIS FIELD IS REQUIRED. Indicates whether the repository requires subscription or other access restrictions for search.", "type": "boolean"}, "published": {"description": "THIS FIELD IS REQUIRED. Indicates that the repository does not have any images in it or has been deleted.", "type": "boolean"}, "registry": {"description": "THIS FIELD IS REQUIRED. Hostname of the registry where the repository can be accessed.", "type": "string"}, "registry_target": {"description": "Consumed by the Registry Proxy so that it can route users to the proper backend registry (e.g. Pulp or Quay).", "type": "string"}, "release_categories": {"description": "THIS FIELD IS REQUIRED. The release categories of a repository.", "items": {"description": "Only these values can be assigned: Generally Available, Beta, Tech Preview, Deprecated, Mixed.", "type": "string"}, "type": "array"}, "release_categories#": {"$ref": "#/components/schemas/ArraySize"}, "replaced_by_repository_name": {"description": "Defines repository to point to in case this one is deprecated.", "type": "string"}, "repository": {"description": "THIS FIELD IS REQUIRED. Combination of image repository and namespace.", "type": "string"}, "requires_terms": {"description": "Flag indicating whether (false) the repository is published on the legacy registry (registry.access.redhat.com), or (true) can only be published to registry.redhat.io.", "type": "boolean"}, "runs_on": {"$ref": "#/components/schemas/RepositoryRunsOn", "description": "Describes what the image can be run on."}, "source_container_image_enabled": {"description": "Flag indicating whether images associated with this repo are included in workflows where non-binary container images are published alongside their binary counterparts.", "type": "boolean"}, "support_levels": {"description": "The support levels of a repository.", "items": {"type": "string"}, "type": "array"}, "support_levels#": {"$ref": "#/components/schemas/ArraySize"}, "total_size_bytes": {"description": "Total size of all images in bytes.", "type": "integer"}, "total_uncompressed_size_bytes": {"description": "Total size of all uncompressed images in bytes.", "type": "integer"}, "ui_get_this_image_override": {"description": "When populated this field will override the content on the 'get this image' tab in red hat container catalog.", "type": "string"}, "use_latest": {"description": "Flag indicating whether the 'latest' tag for an image should be pulled.", "type": "boolean"}, "vendor_label": {"description": "THIS FIELD IS REQUIRED. Label of the vendor that owns this repository.", "type": "string"}}, "type": "object"}, "ContainerRepositoryMarketplace": {"additionalProperties": false, "description": "Marketplace related information.", "properties": {"listing_url": {"description": "This field is read only.", "format": "uri", "maxLength": 2048, "minLength": 1, "type": "string"}}, "type": "object"}, "ContainerSignatureExternal": {"additionalProperties": false, "description": "Object for GraphQL response", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "signature_data": {"type": "string"}}, "type": "object"}, "ContainerTagHistory": {"additionalProperties": false, "description": "The tag history stores a list of image that still have or used to have the given tag", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "_links": {"additionalProperties": false, "description": "This field is read only.", "properties": {"images": {"additionalProperties": false, "properties": {"href": {"description": "URI to this tag's images.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_tag_history_get_tag_history_images", "x-parameter-map": {"identifier": "_id"}}}, "type": "object"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "history": {"description": "Array with the tag history information.", "items": {"$ref": "#/components/schemas/History"}, "type": "array"}, "history#": {"$ref": "#/components/schemas/ArraySize"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "object_type": {"description": "Only these values can be assigned: containerTagHistory.", "type": "string"}, "registry": {"description": "THIS FIELD IS REQUIRED. Hostname of the registry where the repository can be accessed.", "type": "string"}, "repository": {"description": "THIS FIELD IS REQUIRED. Repository name.", "type": "string"}, "tag": {"description": "THIS FIELD IS REQUIRED. The image tag name.", "type": "string"}, "tag_type": {"description": "THIS FIELD IS REQUIRED. The tag type i.e. for floating or persistent. Only these values can be assigned: persistent, floating.", "type": "string"}}, "type": "object"}, "ContainerVendor": {"additionalProperties": false, "description": "Stores information about a Vendor", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "_links": {"additionalProperties": false, "description": "This field is read only.", "properties": {"product_listings": {"additionalProperties": false, "properties": {"href": {"description": "URI to this vendor's product listings.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_product_listings_get_product_listings_by_org_id", "x-parameter-map": {"org_id": "org_id"}}, "repositories": {"additionalProperties": false, "properties": {"href": {"description": "URI to this vendor's repositories.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_repos_get_repos_by_vendor_label", "x-parameter-map": {"label": "label"}}}, "type": "object"}, "allow_hosted_container_registry": {"default": false, "description": "This field is read only.", "type": "boolean"}, "company_url": {"description": "URL to the vendor's main website. This field is read only.", "format": "uri", "type": "string"}, "contact": {"$ref": "#/components/schemas/ContainerVendorContact", "description": "General contact information for the vendor, to be displayed on the vendor page on RHCC. This field is read only."}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "description": {"description": "This field is read only.", "type": "string"}, "drupal_company_id": {"description": "Company node ID from Red Hat Connect. This field is read only.", "type": "integer"}, "industries": {"description": "The industry / vertical the vendor belongs to. This field is read only.", "items": {"type": "string"}, "type": "array"}, "industries#": {"$ref": "#/components/schemas/ArraySize"}, "label": {"maxLength": 255, "minLength": 1, "type": "string"}, "label_locked": {"description": "A flag that determines if vendor label can be changed. This field is read only.", "type": "boolean"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "logo_url": {"description": "This field is read only.", "format": "uri", "type": "string"}, "name": {"description": "This field is read only.", "maxLength": 255, "minLength": 1, "type": "string"}, "object_type": {"description": "This field is read only. Only these values can be assigned: containerVendor.", "type": "string"}, "org_id": {"description": "Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect. This field is read only.", "type": "integer"}, "published": {"description": "THIS FIELD IS REQUIRED. Indicate that the vendor has been published. This field is read only.", "type": "boolean"}, "registry_urls": {"description": "This field is read only.", "items": {"type": "string"}, "type": "array"}, "registry_urls#": {"$ref": "#/components/schemas/ArraySize"}, "rss_feed_url": {"description": "RSS feed for vendor. This field is read only.", "format": "uri", "nullable": true, "type": "string"}, "service_account_token": {"description": "Token for outbound namespace for pulling published marketplace images. This field is read only.", "minLength": 1, "nullable": true, "type": "string"}, "social_media_links": {"description": "This field is read only.", "items": {"$ref": "#/components/schemas/ContainerVendorSocialMediaLinks"}, "type": "array"}, "social_media_links#": {"$ref": "#/components/schemas/ArraySize"}}, "type": "object"}, "ContainerVendorContact": {"additionalProperties": false, "description": "Contact information", "properties": {"email": {"description": "General contact email address.", "type": "string"}, "phone": {"description": "General contact phone number.", "type": "string"}}, "type": "object"}, "ContainerVendorSocialMediaLinks": {"additionalProperties": false, "description": "Social media links.", "properties": {"name": {"description": "THIS FIELD IS REQUIRED. The name of the social media provider.", "type": "string"}, "url": {"description": "THIS FIELD IS REQUIRED. The URL to the social media site for the vendor.", "format": "uri", "type": "string"}}, "type": "object"}, "ContentManifest": {"additionalProperties": false, "description": "Stores a content manifest", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "image": {"$ref": "#/components/schemas/ContentManifestImage", "description": "Associated container image."}, "incompleteness_reasons": {"description": "Reasons for manifest incompleteness.", "items": {"$ref": "#/components/schemas/ContentManifestIncompletenessReason"}, "type": "array"}, "incompleteness_reasons#": {"$ref": "#/components/schemas/ArraySize"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "org_id": {"description": "Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect. This field is read only.", "type": "integer"}}, "type": "object"}, "ContentManifestComponent": {"additionalProperties": false, "description": "Stores software and hardware components associated with image manifests. Structure is based on the CycloneDX component. Link: https://cyclonedx.org/docs/1.4/json/#components", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "author": {"description": "The person(s) or organization(s) that authored the component.", "type": "string"}, "bom_ref": {"description": "An identifier which can be used to reference the component elsewhere in the BOM. Uniqueness within the BOM is ensured checking unique combination od manifest._id and bom_ref.", "type": "string"}, "build_dependency": {"description": "Defines if the container is used as a build dependency during multi-stage builds.", "type": "boolean"}, "content_manifest": {"$ref": "#/components/schemas/ContentManifestComponentManifest", "description": "Associated manifest. Manifest cannot be disassociated after creating association with component. This field is read only."}, "copyright": {"description": "A copyright notice informing users of the underlying claims to copyright ownership in a published work.", "type": "string"}, "cpe": {"description": "Specifies a well-formed CPE name that conforms to the CPE 2.2 or 2.3 specification. See https://nvd.nist.gov/products/cpe", "type": "string"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "description": {"description": "Specifies a description for the component.", "type": "string"}, "evidence": {"$ref": "#/components/schemas/ComponentEvidence", "description": "Provides the ability to document evidence collected through various forms of extraction or analysis."}, "external_references": {"description": "External references provide a way to document systems, sites, and information that may be relevant but which are not included with the BOM.", "items": {"$ref": "#/components/schemas/ComponentExternalReference"}, "type": "array"}, "external_references#": {"$ref": "#/components/schemas/ArraySize"}, "group": {"description": "The grouping name or identifier. This will often be a shortened, single name of the company or project that produced the component, or the source package or domain name. Whitespace and special characters should be avoided. Examples: apache, org.apache.commons, and apache.org.", "type": "string"}, "hashes": {"description": "Hashes of the component.", "items": {"$ref": "#/components/schemas/ComponentHash"}, "type": "array"}, "hashes#": {"$ref": "#/components/schemas/ArraySize"}, "image": {"$ref": "#/components/schemas/ContentManifestComponentImage", "description": "Associated image. Image cannot be disassociated after creating association with component. This field is read only."}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "licenses": {"description": "Licenses of the component.", "items": {"$ref": "#/components/schemas/ComponentLicense"}, "type": "array"}, "licenses#": {"$ref": "#/components/schemas/ArraySize"}, "mime_type": {"description": "When used on file components, the mime-type can provide additional context about the kind of file being represented such as an image, font, or executable. Some library or framework components may also have an associated mime-type.", "pattern": "^[-+a-z0-9.]+/[-+a-z0-9.]+$", "type": "string"}, "name": {"description": "THIS FIELD IS REQUIRED. The name of the component. This will often be a shortened, single name of the component. Examples: commons-lang3 and jquery", "type": "string"}, "org_id": {"description": "Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect. This field is read only.", "type": "integer"}, "properties": {"description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the CycloneDX Property Taxonomy (https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is OPTIONAL.", "items": {"$ref": "#/components/schemas/ComponentProperties"}, "type": "array"}, "properties#": {"$ref": "#/components/schemas/ArraySize"}, "publisher": {"description": "The person(s) or organization(s) that published the component.", "type": "string"}, "purl": {"description": "Specifies the package-url (purl). The purl, if specified, MUST be valid and conform to the specification defined at: https://github.com/package-url/purl-spec", "type": "string"}, "release_notes": {"$ref": "#/components/schemas/ComponentReleaseNotes", "description": "Specifies optional release notes."}, "scope": {"default": "required", "description": "Specifies the scope of the component. Only these values can be assigned: required, optional, excluded.", "type": "string"}, "supplier": {"$ref": "#/components/schemas/Supplier", "description": "The organization that supplied the component. The supplier may often be the manufacturer, but may also be a distributor or repackager."}, "swid": {"$ref": "#/components/schemas/ComponentSwid", "description": "Specifies metadata and content for ISO-IEC 19770-2 Software Identification (SWID) Tags. https://www.iso.org/standard/65666.html"}, "type": {"description": "THIS FIELD IS REQUIRED. Specifies the type of component. For software components, classify as 'application' if no more specific appropriate classification is available or cannot be determined for the component. Only these values can be assigned: application, framework, library, container, operating-system, device, firmware, file.", "type": "string"}, "version": {"description": "The component version. The version should ideally comply with semantic versioning but is not enforced.", "type": "string"}}, "type": "object"}, "ContentManifestComponentImage": {"additionalProperties": false, "description": "Embedded image data.", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}}, "type": "object"}, "ContentManifestComponentManifest": {"additionalProperties": false, "description": "Associated manifest. Manifest cannot be disassociated after creating association. Placeholder for embedding data from Manifest.", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}}, "type": "object"}, "ContentManifestImage": {"additionalProperties": false, "description": "Image manifest", "properties": {"_id": {"description": "ID of the image.", "type": "string"}, "repositories": {"description": "Subset of data from containerImage. This field is read only.", "items": {"$ref": "#/components/schemas/ContentManifestImageRepository"}, "type": "array"}, "repositories#": {"$ref": "#/components/schemas/ArraySize"}}, "type": "object"}, "ContentManifestImageRepository": {"additionalProperties": false, "description": "Container image repository details", "properties": {"manifest_list_digest": {"description": "Available for multiarch images. This field is read only.", "type": "string"}, "manifest_schema2_digest": {"description": "Available for single arch images. This field is read only.", "type": "string"}, "published": {"description": "Indicate if the image has been published to the container catalog. This field is read only.", "type": "boolean"}, "registry": {"description": "Hostname of the registry where the repository can be accessed. This field is read only.", "type": "string"}, "repository": {"description": "Repository name. This field is read only.", "type": "string"}}, "type": "object"}, "ContentManifestIncompletenessReason": {"additionalProperties": false, "description": "Reason of ContentManifest incompleteness.", "properties": {"description": {"description": "Description of the incompleteness reason.", "type": "string"}, "type": {"description": "Type of incompleteness reason. Only these values can be assigned: other.", "type": "string"}}, "type": "object"}, "Descriptions": {"additionalProperties": false, "description": "This field is required when the product listing is published.", "properties": {"long": {"description": "THIS FIELD IS REQUIRED.", "maxLength": 800, "minLength": 1, "type": "string"}, "short": {"description": "THIS FIELD IS REQUIRED.", "maxLength": 250, "minLength": 1, "type": "string"}}, "type": "object"}, "EvidenceLicenseText": {"additionalProperties": false, "description": "An optional way to include the textual content of a license.", "properties": {"content": {"description": "THIS FIELD IS REQUIRED. The attachment data. Proactive controls such as input validation and sanitization should be employed to prevent misuse of attachment text.", "type": "string"}, "content_type": {"default": "text/plain", "description": "Specifies the content type of the text. Defaults to text/plain if not specified.", "type": "string"}, "encoding": {"description": "Specifies the optional encoding the text is represented in. Only these values can be assigned: base64.", "type": "string"}}, "type": "object"}, "EvidenceLicensesLicense": {"additionalProperties": false, "description": "Component evidence license data.", "properties": {"id": {"description": "A valid SPDX license ID. Only these values can be assigned: 0BSD, 389-exception, AAL, Abstyles, AdaCore-doc, Adobe-2006, Adobe-Glyph, ADSL, AFL-1.1, AFL-1.2, AFL-2.0, AFL-2.1, AFL-3.0, Afmparse, AGPL-1.0, AGPL-1.0-only, AGPL-1.0-or-later, AGPL-3.0, AGPL-3.0-only, AGPL-3.0-or-later, Aladdin, AMDPLPA, AML, AMPAS, ANTLR-PD, ANTLR-PD-fallback, Apache-1.0, Apache-1.1, Apache-2.0, APAFML, APL-1.0, App-s2p, APSL-1.0, APSL-1.1, APSL-1.2, APSL-2.0, Arphic-1999, Artistic-1.0, Artistic-1.0-cl8, Artistic-1.0-Perl, Artistic-2.0, Asterisk-exception, ASWF-Digital-Assets-1.0, ASWF-Digital-Assets-1.1, Autoconf-exception-2.0, Autoconf-exception-3.0, Autoconf-exception-generic, Autoconf-exception-macro, Baekmuk, Bahyph, Barr, Beerware, Bison-exception-2.2, Bitstream-Charter, Bitstream-Vera, BitTorrent-1.0, BitTorrent-1.1, blessing, BlueOak-1.0.0, Boehm-GC, Bootloader-exception, Borceux, Brian-Gladman-3-Clause, BSD-1-Clause, BSD-2-Clause, BSD-2-Clause-FreeBSD, BSD-2-Clause-NetBSD, BSD-2-Clause-Patent, BSD-2-Clause-Views, BSD-3-Clause, BSD-3-Clause-Attribution, BSD-3-Clause-Clear, BSD-3-Clause-LBNL, BSD-3-Clause-Modification, BSD-3-Clause-No-Military-License, BSD-3-Clause-No-Nuclear-License, BSD-3-Clause-No-Nuclear-License-2014, BSD-3-Clause-No-Nuclear-Warranty, BSD-3-Clause-Open-MPI, BSD-4.3RENO, BSD-4.3TAHOE, BSD-4-Clause, BSD-4-Clause-Shortened, BSD-4-Clause-UC, BSD-Advertising-Acknowledgement, BSD-Attribution-HPND-disclaimer, BSD-Protection, BSD-Source-Code, BSL-1.0, BUSL-1.1, bzip2-1.0.5, bzip2-1.0.6, CAL-1.0, CAL-1.0-Combined-Work-Exception, Caldera, CATOSL-1.1, CC0-1.0, CC-BY-1.0, CC-BY-2.0, CC-BY-2.5, CC-BY-2.5-AU, CC-BY-3.0, CC-BY-3.0-AT, CC-BY-3.0-DE, CC-BY-3.0-IGO, CC-BY-3.0-NL, CC-BY-3.0-US, CC-BY-4.0, CC-BY-NC-1.0, CC-BY-NC-2.0, CC-BY-NC-2.5, CC-BY-NC-3.0, CC-BY-NC-3.0-DE, CC-BY-NC-4.0, CC-BY-NC-ND-1.0, CC-BY-NC-ND-2.0, CC-BY-NC-ND-2.5, CC-BY-NC-ND-3.0, CC-BY-NC-ND-3.0-DE, CC-BY-NC-ND-3.0-IGO, CC-BY-NC-ND-4.0, CC-BY-NC-SA-1.0, CC-BY-NC-SA-2.0, CC-BY-NC-SA-2.0-DE, CC-BY-NC-SA-2.0-FR, CC-BY-NC-SA-2.0-UK, CC-BY-NC-SA-2.5, CC-BY-NC-SA-3.0, CC-BY-NC-SA-3.0-DE, CC-BY-NC-SA-3.0-IGO, CC-BY-NC-SA-4.0, CC-BY-ND-1.0, CC-BY-ND-2.0, CC-BY-ND-2.5, CC-BY-ND-3.0, CC-BY-ND-3.0-DE, CC-BY-ND-4.0, CC-BY-SA-1.0, CC-BY-SA-2.0, CC-BY-SA-2.0-UK, CC-BY-SA-2.1-JP, CC-BY-SA-2.5, CC-BY-SA-3.0, CC-BY-SA-3.0-AT, CC-BY-SA-3.0-DE, CC-BY-SA-3.0-IGO, CC-BY-SA-4.0, CC-PDDC, CDDL-1.0, CDDL-1.1, CDL-1.0, CDLA-Permissive-1.0, CDLA-Permissive-2.0, CDLA-Sharing-1.0, CECILL-1.0, CECILL-1.1, CECILL-2.0, CECILL-2.1, CECILL-B, CECILL-C, CERN-OHL-1.1, CERN-OHL-1.2, CERN-OHL-P-2.0, CERN-OHL-S-2.0, CERN-OHL-W-2.0, CFITSIO, checkmk, ClArtistic, Classpath-exception-2.0, Clips, CLISP-exception-2.0, CMU-Mach, CNRI-Jython, CNRI-Python, CNRI-Python-GPL-Compatible, COIL-1.0, Community-Spec-1.0, Condor-1.1, copyleft-next-0.3.0, copyleft-next-0.3.1, Cornell-Lossless-JPEG, CPAL-1.0, CPL-1.0, CPOL-1.02, Crossword, cryptsetup-OpenSSL-exception, CrystalStacker, CUA-OPL-1.0, Cube, C-UDA-1.0, curl, D-FSL-1.0, diffmark, DigiRule-FOSS-exception, DL-DE-BY-2.0, DOC, Dotseqn, DRL-1.0, DSDP, dtoa, dvipdfm, ECL-1.0, ECL-2.0, eCos-2.0, eCos-exception-2.0, EFL-1.0, EFL-2.0, eGenix, Elastic-2.0, Entessa, EPICS, EPL-1.0, EPL-2.0, ErlPL-1.1, etalab-2.0, EUDatagrid, EUPL-1.0, EUPL-1.1, EUPL-1.2, Eurosym, Fair, Fawkes-Runtime-exception, FDK-AAC, FLTK-exception, Font-exception-2.0, Frameworx-1.0, FreeBSD-DOC, FreeImage, freertos-exception-2.0, FSFAP, FSFUL, FSFULLR, FSFULLRWD, FTL, GCC-exception-2.0, GCC-exception-3.1, GD, GFDL-1.1, GFDL-1.1-invariants-only, GFDL-1.1-invariants-or-later, GFDL-1.1-no-invariants-only, GFDL-1.1-no-invariants-or-later, GFDL-1.1-only, GFDL-1.1-or-later, GFDL-1.2, GFDL-1.2-invariants-only, GFDL-1.2-invariants-or-later, GFDL-1.2-no-invariants-only, GFDL-1.2-no-invariants-or-later, GFDL-1.2-only, GFDL-1.2-or-later, GFDL-1.3, GFDL-1.3-invariants-only, GFDL-1.3-invariants-or-later, GFDL-1.3-no-invariants-only, GFDL-1.3-no-invariants-or-later, GFDL-1.3-only, GFDL-1.3-or-later, Giftware, GL2PS, Glide, Glulxe, GLWTPL, GNAT-exception, gnu-javamail-exception, gnuplot, GPL-1.0, GPL-1.0+, GPL-1.0-only, GPL-1.0-or-later, GPL-2.0, GPL-2.0+, GPL-2.0-only, GPL-2.0-or-later, GPL-2.0-with-autoconf-exception, GPL-2.0-with-bison-exception, GPL-2.0-with-classpath-exception, GPL-2.0-with-font-exception, GPL-2.0-with-GCC-exception, GPL-3.0, GPL-3.0+, GPL-3.0-interface-exception, GPL-3.0-linking-exception, GPL-3.0-linking-source-exception, GPL-3.0-only, GPL-3.0-or-later, GPL-3.0-with-autoconf-exception, GPL-3.0-with-GCC-exception, GPL-CC-1.0, Graphics-Gems, gSOAP-1.3b, GStreamer-exception-2005, GStreamer-exception-2008, HaskellReport, Hippocratic-2.1, HP-1986, HPND, HPND-export-US, HPND-Markus-Kuhn, HPND-sell-variant, HPND-sell-variant-MIT-disclaimer, HTMLTIDY, i2p-gpl-java-exception, IBM-pibs, ICU, IEC-Code-Components-EULA, IJG, IJG-short, ImageMagick, iMatix, Imlib2, Info-ZIP, Inner-Net-2.0, Intel, Intel-ACPI, Interbase-1.0, IPA, IPL-1.0, ISC, Jam, JasPer-2.0, JPL-image, JPNIC, JSON, Kazlib, KiCad-libraries-exception, Knuth-CTAN, LAL-1.2, LAL-1.3, Latex2e, Latex2e-translated-notice, Leptonica, LGPL-2.0, LGPL-2.0+, LGPL-2.0-only, LGPL-2.0-or-later, LGPL-2.1, LGPL-2.1+, LGPL-2.1-only, LGPL-2.1-or-later, LGPL-3.0, LGPL-3.0+, LGPL-3.0-linking-exception, LGPL-3.0-only, LGPL-3.0-or-later, LGPLLR, Libpng, libpng-2.0, libpri-OpenH323-exception, libselinux-1.0, libtiff, Libtool-exception, libutil-David-Nugent, LiLiQ-P-1.1, LiLiQ-R-1.1, LiLiQ-Rplus-1.1, Linux-man-pages-1-para, Linux-man-pages-copyleft, Linux-man-pages-copyleft-2-para, Linux-man-pages-copyleft-var, Linux-OpenIB, Linux-syscall-note, LLGPL, LLVM-exception, LOOP, LPL-1.0, LPL-1.02, LPPL-1.0, LPPL-1.1, LPPL-1.2, LPPL-1.3a, LPPL-1.3c, LZMA-exception, LZMA-SDK-9.11-to-9.20, LZMA-SDK-9.22, MakeIndex, Martin-Birgmeier, metamail, mif-exception, Minpack, MirOS, MIT, MIT-0, MIT-advertising, MIT-CMU, MIT-enna, MIT-feh, MIT-Festival, MIT-Modern-Variant, MITNFA, MIT-open-group, MIT-Wu, Motosoto, mpich2, mpi-permissive, MPL-1.0, MPL-1.1, MPL-2.0, MPL-2.0-no-copyleft-exception, mplus, MS-LPL, MS-PL, MS-RL, MTLL, MulanPSL-1.0, MulanPSL-2.0, Multics, Mup, NAIST-2003, NASA-1.3, Naumen, NBPL-1.0, NCGL-UK-2.0, NCSA, NetCDF, Net-SNMP, Newsletr, NGPL, NICTA-1.0, NIST-PD, NIST-PD-fallback, NIST-Software, NLOD-1.0, NLOD-2.0, NLPL, Nokia, Nokia-Qt-exception-1.1, NOSL, Noweb, NPL-1.0, NPL-1.1, NPOSL-3.0, NRL, NTP, NTP-0, Nunit, OCaml-LGPL-linking-exception, OCCT-exception-1.0, OCCT-PL, OCLC-2.0, ODbL-1.0, ODC-By-1.0, OFFIS, OFL-1.0, OFL-1.0-no-RFN, OFL-1.0-RFN, OFL-1.1, OFL-1.1-no-RFN, OFL-1.1-RFN, OGC-1.0, OGDL-Taiwan-1.0, OGL-Canada-2.0, OGL-UK-1.0, OGL-UK-2.0, OGL-UK-3.0, OGTSL, OLDAP-1.1, OLDAP-1.2, OLDAP-1.3, OLDAP-1.4, OLDAP-2.0, OLDAP-2.0.1, OLDAP-2.1, OLDAP-2.2, OLDAP-2.2.1, OLDAP-2.2.2, OLDAP-2.3, OLDAP-2.4, OLDAP-2.5, OLDAP-2.6, OLDAP-2.7, OLDAP-2.8, OLFL-1.3, OML, OpenJDK-assembly-exception-1.0, OpenPBS-2.3, OpenSSL, openvpn-openssl-exception, OPL-1.0, OPL-UK-3.0, OPUBL-1.0, OSET-PL-2.1, OSL-1.0, OSL-1.1, OSL-2.0, OSL-2.1, OSL-3.0, O-UDA-1.0, Parity-6.0.0, Parity-7.0.0, PDDL-1.0, PHP-3.0, PHP-3.01, Plexus, PolyForm-Noncommercial-1.0.0, PolyForm-Small-Business-1.0.0, PostgreSQL, PSF-2.0, psfrag, PS-or-PDF-font-exception-20170817, psutils, Python-2.0, Python-2.0.1, Qhull, QPL-1.0, QPL-1.0-INRIA-2004, QPL-1.0-INRIA-2004-exception, Qt-GPL-exception-1.0, Qt-LGPL-exception-1.1, Qwt-exception-1.0, Rdisc, RHeCos-1.1, RPL-1.1, RPL-1.5, RPSL-1.0, RSA-MD, RSCPL, Ruby, Saxpath, SAX-PD, SCEA, SchemeReport, Sendmail, Sendmail-8.23, SGI-B-1.0, SGI-B-1.1, SGI-B-2.0, SGP4, SHL-0.5, SHL-0.51, SHL-2.0, SHL-2.1, SimPL-2.0, SISSL, SISSL-1.2, Sleepycat, SMLNJ, SMPPL, SNIA, snprintf, Spencer-86, Spencer-94, Spencer-99, SPL-1.0, SSH-OpenSSH, SSH-short, SSPL-1.0, StandardML-NJ, SugarCRM-1.1.3, SunPro, SWI-exception, Swift-exception, SWL, Symlinks, TAPR-OHL-1.0, TCL, TCP-wrappers, TermReadKey, TMate, TORQUE-1.1, TOSL, TPDL, TPL-1.0, TTWL, TU-Berlin-1.0, TU-Berlin-2.0, u-boot-exception-2.0, UCAR, UCL-1.0, Unicode-DFS-2015, Unicode-DFS-2016, Unicode-TOU, Universal-FOSS-exception-1.0, UnixCrypt, Unlicense, UPL-1.0, Vim, VOSTROM, vsftpd-openssl-exception, VSL-1.0, W3C, W3C-19980720, W3C-20150513, w3m, Watcom-1.0, Widget-Workshop, Wsuipa, WTFPL, wxWindows, WxWindows-exception-3.1, X11, X11-distribute-modifications-variant, x11vnc-openssl-exception, Xdebug-1.03, Xerox, Xfig, XFree86-1.1, xinetd, xlock, Xnet, xpp, XSkat, YPL-1.0, YPL-1.1, Zed, Zend-2.0, Zimbra-1.3, Zimbra-1.4, Zlib, zlib-acknowledgement, ZPL-1.1, ZPL-2.0, ZPL-2.1.", "type": "string"}, "name": {"description": "If SPDX does not define the license, this field provides the license name.", "type": "string"}, "text": {"$ref": "#/components/schemas/EvidenceLicenseText", "description": "An optional way to include the textual content of a license,"}, "url": {"description": "The URL to the license file. If specified, a 'license' externalReference should also be specified for completeness.", "format": "uri", "type": "string"}}, "type": "object"}, "ExternalReferenceHash": {"additionalProperties": false, "description": "The hash of the external reference.", "properties": {"alg": {"description": "THIS FIELD IS REQUIRED. Hash algorithm. Only these values can be assigned: MD5, SHA-1, SHA-256, SHA-384, SHA-512, SHA3-256, SHA3-384, SHA3-512, BLAKE2b-256, BLAKE2b-384, BLAKE2b-512, BLAKE3.", "type": "string"}, "content": {"description": "THIS FIELD IS REQUIRED. Hash.", "pattern": "^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$", "type": "string"}}, "type": "object"}, "FAQSItems": {"additionalProperties": false, "description": "This field is required when the product listing is published.", "properties": {"answer": {"maxLength": 10000, "type": "string"}, "question": {"maxLength": 500, "type": "string"}}, "type": "object"}, "FeaturesItems": {"additionalProperties": false, "description": "This field is required when the product listing is published.", "properties": {"description": {"maxLength": 1000, "type": "string"}, "title": {"maxLength": 60, "type": "string"}}, "type": "object"}, "FieldHistoryDetailString": {"additionalProperties": false, "description": "Represents a single change to a field.", "properties": {"date": {"description": "Date of change.", "format": "date-time", "type": "string"}, "updated_by": {"description": "User who made the change.", "type": "string"}, "value": {"description": "Value that the field was changed to.", "nullable": true, "type": "string"}}, "type": "object"}, "FieldHistoryString": {"additionalProperties": false, "description": "Tracks changes to a field.", "properties": {"history": {"items": {"$ref": "#/components/schemas/FieldHistoryDetailString"}, "type": "array"}, "history#": {"$ref": "#/components/schemas/ArraySize"}}, "type": "object"}, "ForwarderStatus": {"additionalProperties": false, "description": "", "properties": {"forwarders": {"$ref": "#/components/schemas/Forwarders"}}, "type": "object"}, "ForwarderStatusInfo": {"additionalProperties": false, "description": "Splunk forwarder status information", "properties": {"status": {"description": "Forwarder status", "type": "boolean"}}, "type": "object"}, "Forwarders": {"additionalProperties": false, "description": "Object with all log forwarder statuses", "properties": {"fluentd": {"$ref": "#/components/schemas/ForwarderStatusInfo"}}, "type": "object"}, "FreshnessGrade": {"additionalProperties": false, "description": "Grade based on applicable updates and time provided by PST CVE engine.", "properties": {"creation_date": {"description": "THIS FIELD IS REQUIRED. Date when the grade was added by the vulnerability engine.", "format": "date-time", "type": "string"}, "end_date": {"description": "Date after which the grade is no longer valid. See start_date for when the grade was effective. If no value is set, the grade applies forever. This should happen only for a grade of A (no vulnerabilities) or grade F.", "format": "date-time", "type": "string"}, "grade": {"description": "THIS FIELD IS REQUIRED. The grade. Only these values can be assigned: A, B, C, D, E, F.", "type": "string"}, "start_date": {"description": "THIS FIELD IS REQUIRED. Date from which the grade is in effect. The grade is effective until the end_date, if end_date is set.", "format": "date-time", "type": "string"}}, "type": "object"}, "GradesImageIds": {"additionalProperties": false, "description": "Images that participated in the evaluation of the current image's security grade.", "properties": {"arch": {"description": "THIS FIELD IS REQUIRED. Architecture of the image.", "type": "string"}, "id": {"description": "THIS FIELD IS REQUIRED. Id of the image.", "type": "string"}}, "type": "object"}, "History": {"additionalProperties": false, "description": "Array with the tag history information.", "properties": {"brew_build": {"description": "Unique immutable build identifier in the brew build system.", "type": "string"}, "end_date": {"format": "date-time", "type": "string"}, "start_date": {"description": "THIS FIELD IS REQUIRED. The date for when the tag for the given docker_image_digest starts.", "format": "date-time", "type": "string"}}, "type": "object"}, "Issue": {"additionalProperties": false, "description": "Issue fixed by an advisory.", "properties": {"id": {"description": "Unique identifier of the issue in the issue tracking system.", "type": "string"}, "issue_tracker": {"description": "Hostname of the issue tracking system used.", "type": "string"}, "url": {"description": "Publicly accessible URL of the issue information.", "format": "uri", "type": "string"}}, "type": "object"}, "Label": {"additionalProperties": false, "description": "Image label.", "properties": {"name": {"description": "THIS FIELD IS REQUIRED. The name of the label", "type": "string"}, "value": {"description": "THIS FIELD IS REQUIRED. Value of the label.", "type": "string"}}, "type": "object"}, "Legal": {"additionalProperties": false, "description": "", "properties": {"description": {"maxLength": 500, "minLength": 1, "type": "string"}, "license_agreement_url": {"format": "uri", "maxLength": 2048, "minLength": 1, "nullable": true, "type": "string"}, "privacy_policy_url": {"format": "uri", "maxLength": 2048, "minLength": 1, "nullable": true, "type": "string"}}, "type": "object"}, "License": {"additionalProperties": false, "description": "License data - 'name' or 'id' is required and mutually exclusive.", "properties": {"id": {"description": "A valid SPDX license ID. Only these values can be assigned: 0BSD, 389-exception, AAL, Abstyles, AdaCore-doc, Adobe-2006, Adobe-Glyph, ADSL, AFL-1.1, AFL-1.2, AFL-2.0, AFL-2.1, AFL-3.0, Afmparse, AGPL-1.0, AGPL-1.0-only, AGPL-1.0-or-later, AGPL-3.0, AGPL-3.0-only, AGPL-3.0-or-later, Aladdin, AMDPLPA, AML, AMPAS, ANTLR-PD, ANTLR-PD-fallback, Apache-1.0, Apache-1.1, Apache-2.0, APAFML, APL-1.0, App-s2p, APSL-1.0, APSL-1.1, APSL-1.2, APSL-2.0, Arphic-1999, Artistic-1.0, Artistic-1.0-cl8, Artistic-1.0-Perl, Artistic-2.0, Asterisk-exception, ASWF-Digital-Assets-1.0, ASWF-Digital-Assets-1.1, Autoconf-exception-2.0, Autoconf-exception-3.0, Autoconf-exception-generic, Autoconf-exception-macro, Baekmuk, Bahyph, Barr, Beerware, Bison-exception-2.2, Bitstream-Charter, Bitstream-Vera, BitTorrent-1.0, BitTorrent-1.1, blessing, BlueOak-1.0.0, Boehm-GC, Bootloader-exception, Borceux, Brian-Gladman-3-Clause, BSD-1-Clause, BSD-2-Clause, BSD-2-Clause-FreeBSD, BSD-2-Clause-NetBSD, BSD-2-Clause-Patent, BSD-2-Clause-Views, BSD-3-Clause, BSD-3-Clause-Attribution, BSD-3-Clause-Clear, BSD-3-Clause-LBNL, BSD-3-Clause-Modification, BSD-3-Clause-No-Military-License, BSD-3-Clause-No-Nuclear-License, BSD-3-Clause-No-Nuclear-License-2014, BSD-3-Clause-No-Nuclear-Warranty, BSD-3-Clause-Open-MPI, BSD-4.3RENO, BSD-4.3TAHOE, BSD-4-Clause, BSD-4-Clause-Shortened, BSD-4-Clause-UC, BSD-Advertising-Acknowledgement, BSD-Attribution-HPND-disclaimer, BSD-Protection, BSD-Source-Code, BSL-1.0, BUSL-1.1, bzip2-1.0.5, bzip2-1.0.6, CAL-1.0, CAL-1.0-Combined-Work-Exception, Caldera, CATOSL-1.1, CC0-1.0, CC-BY-1.0, CC-BY-2.0, CC-BY-2.5, CC-BY-2.5-AU, CC-BY-3.0, CC-BY-3.0-AT, CC-BY-3.0-DE, CC-BY-3.0-IGO, CC-BY-3.0-NL, CC-BY-3.0-US, CC-BY-4.0, CC-BY-NC-1.0, CC-BY-NC-2.0, CC-BY-NC-2.5, CC-BY-NC-3.0, CC-BY-NC-3.0-DE, CC-BY-NC-4.0, CC-BY-NC-ND-1.0, CC-BY-NC-ND-2.0, CC-BY-NC-ND-2.5, CC-BY-NC-ND-3.0, CC-BY-NC-ND-3.0-DE, CC-BY-NC-ND-3.0-IGO, CC-BY-NC-ND-4.0, CC-BY-NC-SA-1.0, CC-BY-NC-SA-2.0, CC-BY-NC-SA-2.0-DE, CC-BY-NC-SA-2.0-FR, CC-BY-NC-SA-2.0-UK, CC-BY-NC-SA-2.5, CC-BY-NC-SA-3.0, CC-BY-NC-SA-3.0-DE, CC-BY-NC-SA-3.0-IGO, CC-BY-NC-SA-4.0, CC-BY-ND-1.0, CC-BY-ND-2.0, CC-BY-ND-2.5, CC-BY-ND-3.0, CC-BY-ND-3.0-DE, CC-BY-ND-4.0, CC-BY-SA-1.0, CC-BY-SA-2.0, CC-BY-SA-2.0-UK, CC-BY-SA-2.1-JP, CC-BY-SA-2.5, CC-BY-SA-3.0, CC-BY-SA-3.0-AT, CC-BY-SA-3.0-DE, CC-BY-SA-3.0-IGO, CC-BY-SA-4.0, CC-PDDC, CDDL-1.0, CDDL-1.1, CDL-1.0, CDLA-Permissive-1.0, CDLA-Permissive-2.0, CDLA-Sharing-1.0, CECILL-1.0, CECILL-1.1, CECILL-2.0, CECILL-2.1, CECILL-B, CECILL-C, CERN-OHL-1.1, CERN-OHL-1.2, CERN-OHL-P-2.0, CERN-OHL-S-2.0, CERN-OHL-W-2.0, CFITSIO, checkmk, ClArtistic, Classpath-exception-2.0, Clips, CLISP-exception-2.0, CMU-Mach, CNRI-Jython, CNRI-Python, CNRI-Python-GPL-Compatible, COIL-1.0, Community-Spec-1.0, Condor-1.1, copyleft-next-0.3.0, copyleft-next-0.3.1, Cornell-Lossless-JPEG, CPAL-1.0, CPL-1.0, CPOL-1.02, Crossword, cryptsetup-OpenSSL-exception, CrystalStacker, CUA-OPL-1.0, Cube, C-UDA-1.0, curl, D-FSL-1.0, diffmark, DigiRule-FOSS-exception, DL-DE-BY-2.0, DOC, Dotseqn, DRL-1.0, DSDP, dtoa, dvipdfm, ECL-1.0, ECL-2.0, eCos-2.0, eCos-exception-2.0, EFL-1.0, EFL-2.0, eGenix, Elastic-2.0, Entessa, EPICS, EPL-1.0, EPL-2.0, ErlPL-1.1, etalab-2.0, EUDatagrid, EUPL-1.0, EUPL-1.1, EUPL-1.2, Eurosym, Fair, Fawkes-Runtime-exception, FDK-AAC, FLTK-exception, Font-exception-2.0, Frameworx-1.0, FreeBSD-DOC, FreeImage, freertos-exception-2.0, FSFAP, FSFUL, FSFULLR, FSFULLRWD, FTL, GCC-exception-2.0, GCC-exception-3.1, GD, GFDL-1.1, GFDL-1.1-invariants-only, GFDL-1.1-invariants-or-later, GFDL-1.1-no-invariants-only, GFDL-1.1-no-invariants-or-later, GFDL-1.1-only, GFDL-1.1-or-later, GFDL-1.2, GFDL-1.2-invariants-only, GFDL-1.2-invariants-or-later, GFDL-1.2-no-invariants-only, GFDL-1.2-no-invariants-or-later, GFDL-1.2-only, GFDL-1.2-or-later, GFDL-1.3, GFDL-1.3-invariants-only, GFDL-1.3-invariants-or-later, GFDL-1.3-no-invariants-only, GFDL-1.3-no-invariants-or-later, GFDL-1.3-only, GFDL-1.3-or-later, Giftware, GL2PS, Glide, Glulxe, GLWTPL, GNAT-exception, gnu-javamail-exception, gnuplot, GPL-1.0, GPL-1.0+, GPL-1.0-only, GPL-1.0-or-later, GPL-2.0, GPL-2.0+, GPL-2.0-only, GPL-2.0-or-later, GPL-2.0-with-autoconf-exception, GPL-2.0-with-bison-exception, GPL-2.0-with-classpath-exception, GPL-2.0-with-font-exception, GPL-2.0-with-GCC-exception, GPL-3.0, GPL-3.0+, GPL-3.0-interface-exception, GPL-3.0-linking-exception, GPL-3.0-linking-source-exception, GPL-3.0-only, GPL-3.0-or-later, GPL-3.0-with-autoconf-exception, GPL-3.0-with-GCC-exception, GPL-CC-1.0, Graphics-Gems, gSOAP-1.3b, GStreamer-exception-2005, GStreamer-exception-2008, HaskellReport, Hippocratic-2.1, HP-1986, HPND, HPND-export-US, HPND-Markus-Kuhn, HPND-sell-variant, HPND-sell-variant-MIT-disclaimer, HTMLTIDY, i2p-gpl-java-exception, IBM-pibs, ICU, IEC-Code-Components-EULA, IJG, IJG-short, ImageMagick, iMatix, Imlib2, Info-ZIP, Inner-Net-2.0, Intel, Intel-ACPI, Interbase-1.0, IPA, IPL-1.0, ISC, Jam, JasPer-2.0, JPL-image, JPNIC, JSON, Kazlib, KiCad-libraries-exception, Knuth-CTAN, LAL-1.2, LAL-1.3, Latex2e, Latex2e-translated-notice, Leptonica, LGPL-2.0, LGPL-2.0+, LGPL-2.0-only, LGPL-2.0-or-later, LGPL-2.1, LGPL-2.1+, LGPL-2.1-only, LGPL-2.1-or-later, LGPL-3.0, LGPL-3.0+, LGPL-3.0-linking-exception, LGPL-3.0-only, LGPL-3.0-or-later, LGPLLR, Libpng, libpng-2.0, libpri-OpenH323-exception, libselinux-1.0, libtiff, Libtool-exception, libutil-David-Nugent, LiLiQ-P-1.1, LiLiQ-R-1.1, LiLiQ-Rplus-1.1, Linux-man-pages-1-para, Linux-man-pages-copyleft, Linux-man-pages-copyleft-2-para, Linux-man-pages-copyleft-var, Linux-OpenIB, Linux-syscall-note, LLGPL, LLVM-exception, LOOP, LPL-1.0, LPL-1.02, LPPL-1.0, LPPL-1.1, LPPL-1.2, LPPL-1.3a, LPPL-1.3c, LZMA-exception, LZMA-SDK-9.11-to-9.20, LZMA-SDK-9.22, MakeIndex, Martin-Birgmeier, metamail, mif-exception, Minpack, MirOS, MIT, MIT-0, MIT-advertising, MIT-CMU, MIT-enna, MIT-feh, MIT-Festival, MIT-Modern-Variant, MITNFA, MIT-open-group, MIT-Wu, Motosoto, mpich2, mpi-permissive, MPL-1.0, MPL-1.1, MPL-2.0, MPL-2.0-no-copyleft-exception, mplus, MS-LPL, MS-PL, MS-RL, MTLL, MulanPSL-1.0, MulanPSL-2.0, Multics, Mup, NAIST-2003, NASA-1.3, Naumen, NBPL-1.0, NCGL-UK-2.0, NCSA, NetCDF, Net-SNMP, Newsletr, NGPL, NICTA-1.0, NIST-PD, NIST-PD-fallback, NIST-Software, NLOD-1.0, NLOD-2.0, NLPL, Nokia, Nokia-Qt-exception-1.1, NOSL, Noweb, NPL-1.0, NPL-1.1, NPOSL-3.0, NRL, NTP, NTP-0, Nunit, OCaml-LGPL-linking-exception, OCCT-exception-1.0, OCCT-PL, OCLC-2.0, ODbL-1.0, ODC-By-1.0, OFFIS, OFL-1.0, OFL-1.0-no-RFN, OFL-1.0-RFN, OFL-1.1, OFL-1.1-no-RFN, OFL-1.1-RFN, OGC-1.0, OGDL-Taiwan-1.0, OGL-Canada-2.0, OGL-UK-1.0, OGL-UK-2.0, OGL-UK-3.0, OGTSL, OLDAP-1.1, OLDAP-1.2, OLDAP-1.3, OLDAP-1.4, OLDAP-2.0, OLDAP-2.0.1, OLDAP-2.1, OLDAP-2.2, OLDAP-2.2.1, OLDAP-2.2.2, OLDAP-2.3, OLDAP-2.4, OLDAP-2.5, OLDAP-2.6, OLDAP-2.7, OLDAP-2.8, OLFL-1.3, OML, OpenJDK-assembly-exception-1.0, OpenPBS-2.3, OpenSSL, openvpn-openssl-exception, OPL-1.0, OPL-UK-3.0, OPUBL-1.0, OSET-PL-2.1, OSL-1.0, OSL-1.1, OSL-2.0, OSL-2.1, OSL-3.0, O-UDA-1.0, Parity-6.0.0, Parity-7.0.0, PDDL-1.0, PHP-3.0, PHP-3.01, Plexus, PolyForm-Noncommercial-1.0.0, PolyForm-Small-Business-1.0.0, PostgreSQL, PSF-2.0, psfrag, PS-or-PDF-font-exception-20170817, psutils, Python-2.0, Python-2.0.1, Qhull, QPL-1.0, QPL-1.0-INRIA-2004, QPL-1.0-INRIA-2004-exception, Qt-GPL-exception-1.0, Qt-LGPL-exception-1.1, Qwt-exception-1.0, Rdisc, RHeCos-1.1, RPL-1.1, RPL-1.5, RPSL-1.0, RSA-MD, RSCPL, Ruby, Saxpath, SAX-PD, SCEA, SchemeReport, Sendmail, Sendmail-8.23, SGI-B-1.0, SGI-B-1.1, SGI-B-2.0, SGP4, SHL-0.5, SHL-0.51, SHL-2.0, SHL-2.1, SimPL-2.0, SISSL, SISSL-1.2, Sleepycat, SMLNJ, SMPPL, SNIA, snprintf, Spencer-86, Spencer-94, Spencer-99, SPL-1.0, SSH-OpenSSH, SSH-short, SSPL-1.0, StandardML-NJ, SugarCRM-1.1.3, SunPro, SWI-exception, Swift-exception, SWL, Symlinks, TAPR-OHL-1.0, TCL, TCP-wrappers, TermReadKey, TMate, TORQUE-1.1, TOSL, TPDL, TPL-1.0, TTWL, TU-Berlin-1.0, TU-Berlin-2.0, u-boot-exception-2.0, UCAR, UCL-1.0, Unicode-DFS-2015, Unicode-DFS-2016, Unicode-TOU, Universal-FOSS-exception-1.0, UnixCrypt, Unlicense, UPL-1.0, Vim, VOSTROM, vsftpd-openssl-exception, VSL-1.0, W3C, W3C-19980720, W3C-20150513, w3m, Watcom-1.0, Widget-Workshop, Wsuipa, WTFPL, wxWindows, WxWindows-exception-3.1, X11, X11-distribute-modifications-variant, x11vnc-openssl-exception, Xdebug-1.03, Xerox, Xfig, XFree86-1.1, xinetd, xlock, Xnet, xpp, XSkat, YPL-1.0, YPL-1.1, Zed, Zend-2.0, Zimbra-1.3, Zimbra-1.4, Zlib, zlib-acknowledgement, ZPL-1.1, ZPL-2.0, ZPL-2.1.", "type": "string"}, "name": {"description": "License name.", "type": "string"}, "text": {"$ref": "#/components/schemas/ComponentLicenseText", "description": "An optional way to include the textual content of a license."}, "url": {"description": "The URL to the license file. If specified, a 'license' externalReference should also be specified for completeness.", "format": "uri", "type": "string"}}, "type": "object"}, "LinkedResourcesItems": {"additionalProperties": false, "description": "", "properties": {"category": {"description": "Only these values can be assigned: documentation & support, case studies.", "type": "string"}, "description": {"description": "THIS FIELD IS REQUIRED.", "maxLength": 100, "minLength": 1, "type": "string"}, "thumbnail_url": {"format": "uri", "maxLength": 2048, "minLength": 1, "type": "string"}, "title": {"description": "THIS FIELD IS REQUIRED.", "maxLength": 50, "minLength": 1, "type": "string"}, "type": {"description": "THIS FIELD IS REQUIRED. Only these values can be assigned: Video, Article, Documentation, Website, Podcasts, On-demand Events.", "type": "string"}, "url": {"description": "THIS FIELD IS REQUIRED.", "format": "uri", "maxLength": 2048, "minLength": 1, "type": "string"}}, "type": "object"}, "Logo": {"additionalProperties": false, "description": "", "properties": {"url": {"format": "uri", "maxLength": 2048, "minLength": 1, "nullable": true, "type": "string"}}, "type": "object"}, "MongoDBStatus": {"additionalProperties": false, "description": "Status object for a mongoDB database", "properties": {"name": {"description": "Name of the database", "type": "string"}, "reachable": {"description": "Indicates if database can be reached.", "type": "boolean"}}, "type": "object"}, "MongoStatusGQL": {"additionalProperties": false, "description": "Status of mongoDB databases Pyxis depends on.", "properties": {"mongodb_databases": {"items": {"$ref": "#/components/schemas/MongoDBStatus"}, "type": "array"}, "mongodb_databases#": {"$ref": "#/components/schemas/ArraySize"}}, "type": "object"}, "OperatorBundle": {"additionalProperties": false, "description": "An Operator Bundle is a container image that stores the Kubernetes manifests and metadata associated with an operator. A bundle is meant to represent a specific version of an operator.", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "alm_examples": {"description": "Specific information from the CSV requested by customer.", "items": {"$ref": "#/components/schemas/ALMExample"}, "type": "array"}, "alm_examples#": {"$ref": "#/components/schemas/ArraySize"}, "annotations": {"$ref": "#/components/schemas/OperatorBundleAnnotation", "description": "A subset of the \"metadata.annotations\" object from the CSV. Any annotations that are in the \"operators.openshift.io\" namespace that are strings of JSON will be expanded if it is valid JSON. Namespaces are not preserved due to their usage of special characters and all dashes are converted to underscores for consistency with other fields."}, "architectures": {"description": "List of all supported architectures. An empty list means that architectures are unknown as CSV doesn't include architecture labels.", "items": {"type": "string"}, "type": "array"}, "architectures#": {"$ref": "#/components/schemas/ArraySize"}, "bundle": {"description": "The 'bundle' is the operator representation of a version of operator metadata. There is one bundle per operator/package channel for a particular OpenShift version.", "type": "string"}, "bundle_path": {"description": "Pullspec of the operator bundle e.g. quay.io/foo/bar@sha256:digest.", "type": "string"}, "bundle_path_digest": {"description": "Digest from the bundle_path.", "nullable": true, "type": "string"}, "capabilities": {"description": "Specific information from the CSV requested by customer.", "items": {"type": "string"}, "type": "array"}, "capabilities#": {"$ref": "#/components/schemas/ArraySize"}, "channel_name": {"description": "The channel for which this bundle is being released, e.g. \"amq-streams-1.5.x.", "type": "string"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "csv_description": {"description": "A thorough description of the Operator\u2019s functionality in form of a markdown blob.", "type": "string"}, "csv_display_name": {"description": "A public name to identify the Operator.", "type": "string"}, "csv_metadata_description": {"description": "Short description of the CRD and operator functionality.", "type": "string"}, "csv_name": {"description": "Full name of the package. Usually consists of package_name.version.", "type": "string"}, "in_index_img": {"description": "Indicate if the bundle is in an index image.", "type": "boolean"}, "install_modes": {"description": "Specific information from the CSV requested by customer.", "items": {"$ref": "#/components/schemas/OperatorBundleInstallMode"}, "type": "array"}, "install_modes#": {"$ref": "#/components/schemas/ArraySize"}, "is_default_channel": {"description": "If true then the channel is the default for this package, false otherwise.", "type": "boolean"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "latest_in_channel": {"description": "Indicate that the bundle is the latest version of a package in a channel for its associated OCP version (index image).", "type": "boolean"}, "ocp_version": {"description": "Specific OCP version for this bundle, e.g. \"4.5\".", "type": "string"}, "organization": {"description": "Organization as understood by iib, e.g. \"redhat-marketplace\".", "type": "string"}, "package": {"description": "The name of the operator, e.g. \"amq-streams\".", "type": "string"}, "provided_apis": {"description": "Specific information from the CSV requested by customer. Should correspond with values from alm_examples.", "items": {"$ref": "#/components/schemas/ProvidedAPIsItems"}, "type": "array"}, "provided_apis#": {"$ref": "#/components/schemas/ArraySize"}, "provider": {"description": "String describing bundle provider", "nullable": true, "type": "string"}, "related_images": {"description": "Specific information from the CSV requested by customer.", "items": {"$ref": "#/components/schemas/RelatedImagesItems"}, "type": "array"}, "related_images#": {"$ref": "#/components/schemas/ArraySize"}, "replaces": {"description": "Name of operator which the bundle replaces.", "nullable": true, "type": "string"}, "skip_range": {"description": "String describing skipped versions.", "nullable": true, "type": "string"}, "skips": {"description": "List of skipped updates. See OLM upgrades documentation for more details.", "items": {"type": "string"}, "type": "array"}, "skips#": {"$ref": "#/components/schemas/ArraySize"}, "source_index_container_path": {"description": "Where this bundle was collected from, e.g. \"quay.io/foo/bar:v4.5\".", "type": "string"}, "version": {"description": "The operator version for this bundle", "type": "string"}, "version_original": {"description": "Original version of the bundle, used to recognize semver validity.", "type": "string"}}, "type": "object"}, "OperatorBundleAnnotation": {"additionalProperties": false, "description": "A subset of the \"metadata.annotations\" object from the CSV. Any annotations that are in the \"operators.openshift.io\" namespace that are strings of JSON will be expanded if it is valid JSON. Namespaces are not preserved due to their usage of special characters and all dashes are converted to underscores for consistency with other fields.", "properties": {"features": {"description": "List of annotations for operator metadata to define various infrastructure features of an operator. Only lowercase. Nullable to indicate field not used.", "items": {"type": "string"}, "nullable": true, "type": "array"}, "features#": {"$ref": "#/components/schemas/ArraySize"}, "infrastructure_features": {"default": [], "description": "The deserialized value of operators.openshift.io/infrastructure-features. This defaults to an empty array.", "items": {"type": "string"}, "type": "array"}, "infrastructure_features#": {"$ref": "#/components/schemas/ArraySize"}, "valid_subscription": {"default": [], "description": "The deserialized value of operators.openshift.io/valid-subscription. This defaults to an empty array.", "items": {"type": "string"}, "type": "array"}, "valid_subscription#": {"$ref": "#/components/schemas/ArraySize"}}, "type": "object"}, "OperatorBundleInstallMode": {"additionalProperties": false, "description": "Specific information from the CSV requested by customer.", "properties": {"supported": {"type": "boolean"}, "type": {"type": "string"}}, "type": "object"}, "OperatorBundlesItems": {"additionalProperties": false, "description": "", "properties": {"_id": {"description": "THIS FIELD IS REQUIRED. Bundle unique identifier", "type": "string"}, "annotations": {"$ref": "#/components/schemas/OperatorBundleAnnotation", "description": "A subset of the \"metadata.annotations\" object from the CSV. Any annotations that are in the \"operators.openshift.io\" namespace that are strings of JSON will be expanded if it is valid JSON. Namespaces are not preserved due to their usage of special characters and all dashes are converted to underscores for consistency with other fields."}, "capabilities": {"items": {"type": "string"}, "type": "array"}, "capabilities#": {"$ref": "#/components/schemas/ArraySize"}, "ocp_version": {"description": "Specific OCP version for this bundle, e.g. \"4.5\".", "type": "string"}, "package": {"description": "THIS FIELD IS REQUIRED. Bundle package name", "minLength": 1, "type": "string"}}, "type": "object"}, "OperatorIndex": {"additionalProperties": false, "description": "List of operator indices from which operator bundle metadata are extracted to operatorBundles collection.", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "end_of_life": {"description": "The date till the index image is valid", "format": "date-time", "type": "string"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "ocp_version": {"description": "OCP version, e.g. 4.5.", "type": "string"}, "organization": {"description": "Organization, as understood by iib, e.g. redhat-marketplace.", "type": "string"}, "path": {"description": "The docker path used to pull this index container, e.g. quay.io/foo/bar:v4.5.", "type": "string"}}, "type": "object"}, "OperatorPackage": {"additionalProperties": false, "description": "", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "association": {"description": "THIS FIELD IS REQUIRED.", "type": "string"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "package_name": {"description": "THIS FIELD IS REQUIRED.", "maxLength": 100, "minLength": 1, "type": "string"}, "source": {"description": "THIS FIELD IS REQUIRED. Only these values can be assigned: certified-operators, upstream-community-operators, community-operators, redhat-operators, redhat-marketplace.", "type": "string"}}, "type": "object"}, "ParsedData": {"additionalProperties": false, "description": "", "properties": {"architecture": {"type": "string"}, "author": {"type": "string"}, "command": {"type": "string"}, "comment": {"type": "string"}, "container": {"type": "string"}, "created": {"description": "The 'created' date reported by image metadata. Stored as String because we do not have control on that format.", "type": "string"}, "docker_image_digest": {"type": "string"}, "docker_image_id": {"type": "string"}, "docker_version": {"description": "Version of docker reported by 'docker inspect' for this image.", "type": "string"}, "env_variables": {"items": {"type": "string"}, "type": "array"}, "env_variables#": {"$ref": "#/components/schemas/ArraySize"}, "image_id": {"type": "string"}, "labels": {"items": {"$ref": "#/components/schemas/Label"}, "type": "array"}, "labels#": {"$ref": "#/components/schemas/ArraySize"}, "layers": {"description": "Layer digests from the image.", "items": {"type": "string"}, "type": "array"}, "layers#": {"$ref": "#/components/schemas/ArraySize"}, "os": {"type": "string"}, "ports": {"type": "string"}, "repos": {"description": "Repositories defined within an image as reported by yum command.", "items": {"$ref": "#/components/schemas/ParsedDataRepo"}, "type": "array"}, "repos#": {"$ref": "#/components/schemas/ArraySize"}, "size": {"description": "Size of this image as reported by image metadata.", "type": "integer"}, "uncompressed_layer_sizes": {"description": "Information about uncompressed layer sizes.", "items": {"$ref": "#/components/schemas/UncompressedLayerSize"}, "type": "array"}, "uncompressed_layer_sizes#": {"$ref": "#/components/schemas/ArraySize"}, "uncompressed_size_bytes": {"description": "Uncompressed images size in bytes (sum of uncompressed layers size).", "type": "integer"}, "user": {"description": "The user on the images.", "type": "string"}, "virtual_size": {"description": "Virtual size of this image as reported by image metadata.", "type": "integer"}}, "type": "object"}, "ParsedDataRepo": {"additionalProperties": false, "description": "", "properties": {"baseurl": {"type": "string"}, "expire": {"type": "string"}, "filename": {"type": "string"}, "id": {"type": "string"}, "name": {"type": "string"}, "pkgs": {"type": "string"}, "size": {"type": "string"}, "updated": {"type": "string"}}, "type": "object"}, "ProductListing": {"additionalProperties": false, "description": "Product listings define a marketing page in the Ecosystem Catalog. It allows you to group repos and showcase what they accomplish together as an application. In the case of operators, your CSV file populates OperatorHub, which can only be viewed in cluster through OpenShift. Your product listing is publicly visible in the Ecosystem Catalog so anyone can know that it is offered.", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "_links": {"additionalProperties": false, "description": "This field is read only.", "properties": {"vendor": {"additionalProperties": false, "properties": {"href": {"description": "URI to the vendor of the product listing.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_vendors_get_vendor_by_org_id", "x-parameter-map": {"org_id": "org_id"}}}, "type": "object"}, "category": {"description": "Only these values can be assigned: software, hardware.", "type": "string"}, "cert_projects": {"description": "List of unique identifiers for the certification project.", "items": {"type": "string"}, "type": "array"}, "cert_projects#": {"$ref": "#/components/schemas/ArraySize"}, "certification_badges": {"description": "Special certifications specific to the certification platform. The value is given by attached certification projects which are published. This field is read only.", "items": {"description": "Only these values can be assigned: cni, csi, cnf, vnf.", "type": "string"}, "maxItems": 1, "nullable": true, "type": "array"}, "certification_badges#": {"$ref": "#/components/schemas/ArraySize"}, "certification_badges_all": {"description": "Special certifications specific to the certification platform. The value is given by all attached certification projects with any certification_level. This field is read only.", "items": {"description": "Only these values can be assigned: cni, csi, cnf, vnf.", "type": "string"}, "maxItems": 1, "nullable": true, "type": "array"}, "certification_badges_all#": {"$ref": "#/components/schemas/ArraySize"}, "certification_level": {"description": "The product listing content can be certified on several levels. This field determines whether the content was certified by Red Hat itself, by an ISV partner who followed official Red Hat certification, or by vendor validation. This field is read only. Only these values can be assigned: Red Hat, Certified, Vendor validated, Vendor validated and certified.", "nullable": true, "type": "string"}, "certification_level_history": {"$ref": "#/components/schemas/FieldHistoryString", "description": "Tracks history for the `certification_level` field This field is read only."}, "contacts": {"description": "List of contacts for the product listing. This field is required when the product listing is published.", "items": {"$ref": "#/components/schemas/ContactsItems"}, "maxItems": 10, "minItems": 1, "type": "array"}, "contacts#": {"$ref": "#/components/schemas/ArraySize"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "deleted": {"default": false, "description": "Flag determining if product listing is considered to be deleted. Product listing can be deleted only if it is not published. Value is set to False by default.", "type": "boolean"}, "deployed_as": {"description": "Determine a way how a product is deployed, based only on published projects. This field is read only.", "items": {"description": "Only these values can be assigned: Helm chart, Operator.", "type": "string"}, "nullable": true, "type": "array"}, "deployed_as#": {"$ref": "#/components/schemas/ArraySize"}, "deployed_as_all": {"description": "Determine a way how a product is deployed, based on all projects with any certification_status. This field is read only.", "items": {"description": "Only these values can be assigned: Helm chart, Operator.", "type": "string"}, "nullable": true, "type": "array"}, "deployed_as_all#": {"$ref": "#/components/schemas/ArraySize"}, "descriptions": {"$ref": "#/components/schemas/Descriptions", "description": "This field is required when the product listing is published."}, "drupal_company_id": {"description": "Company node ID from Red Hat Connect. Read only. This field is read only.", "type": "integer"}, "faqs": {"description": "FAQ section for the catalog page.", "items": {"$ref": "#/components/schemas/FAQSItems"}, "nullable": true, "type": "array"}, "faqs#": {"$ref": "#/components/schemas/ArraySize"}, "features": {"description": "Features section for the catalog page.", "items": {"$ref": "#/components/schemas/FeaturesItems"}, "maxItems": 6, "nullable": true, "type": "array"}, "features#": {"$ref": "#/components/schemas/ArraySize"}, "focus_product": {"default": false, "description": "Indicates if the listing is eligible to be featured in Catalog. This field is read only.", "type": "boolean"}, "functional_categories": {"description": "This field is required when the product listing is published.", "items": {"description": "Only these values can be assigned: AI & machine learning, Analytics, Blog & CMS, Blockchain, Business software, Compute, Data storage, Developer stacks, Developer tools, DevOps, IT & management tools, Mobile, Monitoring, Networking, Orchestrators, OS & platforms, Security, Other.", "type": "string"}, "maxItems": 3, "minItems": 1, "type": "array"}, "functional_categories#": {"$ref": "#/components/schemas/ArraySize"}, "helm_chart": {"$ref": "#/components/schemas/ProductListingHelmChart", "description": "Information related to helm chart product listing. This field is read only."}, "industries": {"description": "List of industries to which the product listing belongs. This field is read only.", "items": {"description": "Only these values can be assigned: Telecommunications, Automotive, Construction, Education, Energy, Financial services, Government, Healthcare, Hospitality, IT consulting & services, Logistics & transportation, Manufacturing, Media & entertainment, Retail, Technology, Utilities.", "type": "string"}, "nullable": true, "type": "array"}, "industries#": {"$ref": "#/components/schemas/ArraySize"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "legal": {"$ref": "#/components/schemas/Legal"}, "linked_resources": {"description": "This field is required when the product listing is published.", "items": {"$ref": "#/components/schemas/LinkedResourcesItems"}, "maxItems": 8, "minItems": 3, "type": "array"}, "linked_resources#": {"$ref": "#/components/schemas/ArraySize"}, "logo": {"$ref": "#/components/schemas/Logo"}, "name": {"description": "This field is required when the product listing is published.", "maxLength": 100, "minLength": 1, "type": "string"}, "operator_bundles": {"description": "This field is read only.", "items": {"$ref": "#/components/schemas/OperatorBundlesItems"}, "type": "array"}, "operator_bundles#": {"$ref": "#/components/schemas/ArraySize"}, "org_id": {"description": "Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect. This field is read only.", "nullable": true, "type": "integer"}, "published": {"description": "This field is required when the product listing is published.", "type": "boolean"}, "quick_start_configuration": {"$ref": "#/components/schemas/QuickStartConfiguration"}, "repositories": {"description": "List of unique identifiers for the repository.", "items": {"type": "string"}, "type": "array"}, "repositories#": {"$ref": "#/components/schemas/ArraySize"}, "search_aliases": {"description": "List of search aliases for Solr.", "items": {"$ref": "#/components/schemas/SearchAliasesItems"}, "maxItems": 5, "type": "array"}, "search_aliases#": {"$ref": "#/components/schemas/ArraySize"}, "support": {"$ref": "#/components/schemas/Support", "description": "This field is required when the product listing is published."}, "target_platforms": {"description": "List of target platforms for the product listing. This field is read only.", "items": {"description": "Only these values can be assigned: Red Hat Enterprise Linux, Red Hat OpenShift, Red Hat OpenStack Platform, None.", "type": "string"}, "type": "array"}, "target_platforms#": {"$ref": "#/components/schemas/ArraySize"}, "type": {"description": "This field is required when the product listing is published. Only these values can be assigned: container stack, traditional application, openstack infrastructure.", "type": "string"}, "vendor_label": {"description": "This field is read only.", "type": "string"}}, "type": "object"}, "ProductListingHelmChart": {"additionalProperties": false, "description": "", "properties": {"charts": {"description": "Helm chart specific information. This field is read only.", "items": {"$ref": "#/components/schemas/ProductListingHelmChartDetail"}, "type": "array"}, "charts#": {"$ref": "#/components/schemas/ArraySize"}, "ocp_versions": {"description": "OCP versions for this helm chart. This field is read only.", "items": {"type": "string"}, "type": "array"}, "ocp_versions#": {"$ref": "#/components/schemas/ArraySize"}}, "type": "object"}, "ProductListingHelmChartDetail": {"additionalProperties": false, "description": "", "properties": {"chart_name": {"description": "THIS FIELD IS REQUIRED. Helm chart name.", "minLength": 1, "type": "string"}}, "type": "object"}, "ProvidedAPIsItems": {"additionalProperties": false, "description": "Specific information from the CSV requested by customer.Should correspond with values from alm_examples.", "properties": {"group": {"type": "string"}, "kind": {"type": "string"}, "plural": {"type": "string"}, "version": {"type": "string"}}, "type": "object"}, "PullRequest": {"additionalProperties": false, "description": "Pull request of certification test results.", "properties": {"id": {"description": "THIS FIELD IS REQUIRED. Pull request identifier", "type": "integer"}, "status": {"description": "THIS FIELD IS REQUIRED. Pull request status Only these values can be assigned: open, closed, merged.", "type": "string"}, "url": {"description": "THIS FIELD IS REQUIRED. Pull request URL", "format": "uri", "type": "string"}}, "type": "object"}, "QuickStartConfiguration": {"additionalProperties": false, "description": "", "properties": {"default_deploy_instructions": {"default": true, "description": "A flag indicating whether a product uses a default instruction for deployment.", "type": "boolean"}, "instructions": {"maxLength": 10000, "minLength": 1, "nullable": true, "type": "string"}}, "type": "object"}, "RedHatContainerAdvisory": {"additionalProperties": false, "description": "Advisory associated with RH container image.", "properties": {"_id": {"description": "MongoDB unique _id", "type": "string"}, "content_type": {"description": "THIS FIELD IS REQUIRED. The content type of advisory. i.e. for CONTAINER or RPM. Only these values can be assigned: RPM, CONTAINER, APB.", "type": "string"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "cves": {"description": "Array of CVEs fixed by this advisory.", "items": {"$ref": "#/components/schemas/CVE"}, "type": "array"}, "cves#": {"$ref": "#/components/schemas/ArraySize"}, "description": {"description": "Advisory description.", "type": "string"}, "issues": {"description": "Array of issues fixed by this advisory.", "items": {"$ref": "#/components/schemas/Issue"}, "type": "array"}, "issues#": {"$ref": "#/components/schemas/ArraySize"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "object_type": {"description": "Only these values can be assigned: redHatContainerAdvisory.", "type": "string"}, "severity": {"description": "Severity of the advisory.", "type": "string"}, "ship_date": {"description": "The date the image advisory shipped.", "format": "date-time", "type": "string"}, "solution": {"description": "The solution of the advisory.", "type": "string"}, "synopsis": {"description": "THIS FIELD IS REQUIRED. Short summary of the advisory.", "maxLength": 2000, "type": "string"}, "topic": {"description": "Topic of the advisory.", "type": "string"}, "type": {"description": "THIS FIELD IS REQUIRED. The type of advisory. i.e. for RHSA:2016-1001 the type is 'RHSA'. Only these values can be assigned: RHEA, RHBA, RHSA.", "type": "string"}}, "type": "object"}, "RegistryCredentials": {"additionalProperties": false, "description": "Registry credentials.", "properties": {"password": {"description": "Container registry password.", "minLength": 1, "type": "string"}, "username": {"description": "Container registry username.", "minLength": 1, "type": "string"}}, "type": "object"}, "RegistrySecrets": {"additionalProperties": false, "description": "Registry credentials.", "properties": {"docker_config_json": {"description": "Docker config for operator registry projects. Value has to be a valid JSON. This field is read only.", "nullable": true, "type": "string"}, "registry_credentials": {"$ref": "#/components/schemas/RegistryCredentials", "description": "This field is read only."}}, "type": "object"}, "RelatedImagesItems": {"additionalProperties": false, "description": "Specific information from the CSV requested by customer.", "properties": {"digest": {"nullable": true, "type": "string"}, "image": {"type": "string"}, "name": {"type": "string"}}, "type": "object"}, "ReleaseNotesNotes": {"additionalProperties": false, "description": "A note containing the locale and content.", "properties": {"locale": {"description": "The ISO-639 (or higher) language code and optional ISO-3166 (or higher) country code. Examples include: \"en\", \"en-US\", \"fr\" and \"fr-CA\".", "pattern": "^([a-z]{2})(-[A-Z]{2})?$", "type": "string"}, "text": {"$ref": "#/components/schemas/ReleaseNotesText", "description": "THIS FIELD IS REQUIRED. Specifies the full content of the release note."}}, "type": "object"}, "ReleaseNotesProperties": {"additionalProperties": false, "description": "Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the CycloneDX Property Taxonomy. Formal registration is OPTIONAL.", "properties": {"name": {"description": "The name of the property. Duplicate names are allowed, each potentially having a different value.", "type": "string"}, "value": {"description": "The value of the property.", "type": "string"}}, "type": "object"}, "ReleaseNotesResolves": {"additionalProperties": false, "description": "An individual issue that has been resolved.", "properties": {"description": {"description": "A description of the issue.", "type": "string"}, "id": {"description": "The identifier of the issue assigned by the source of the issue.", "type": "string"}, "name": {"description": "The name of the issue.", "type": "string"}, "references": {"description": "A collection of URLs for the reference. Multiple URLs are allowed.", "items": {"format": "uri", "type": "string"}, "type": "array"}, "references#": {"$ref": "#/components/schemas/ArraySize"}, "source": {"$ref": "#/components/schemas/ReleaseNotesResolvesSource", "description": "The source of the issue where it is documented."}, "type": {"description": "THIS FIELD IS REQUIRED. Specifies the type of issue. Only these values can be assigned: defect, enhancement, security.", "type": "string"}}, "type": "object"}, "ReleaseNotesResolvesSource": {"additionalProperties": false, "description": "The source of the issue where it is documented.", "properties": {"name": {"description": "The name of the source. For example 'National Vulnerability Database', 'NVD', and 'Apache'", "type": "string"}, "url": {"description": "The url of the issue documentation as provided by the source.", "format": "uri", "type": "string"}}, "type": "object"}, "ReleaseNotesText": {"additionalProperties": false, "description": "Specifies the full content of the release note.", "properties": {"content": {"description": "THIS FIELD IS REQUIRED. The attachment data. Proactive controls such as input validation and sanitization should be employed to prevent misuse of attachment text.", "type": "string"}, "content_type": {"default": "text/plain", "description": "Specifies the content type of the text. Defaults to text/plain if not specified.", "type": "string"}, "encoding": {"description": "Specifies the optional encoding the text is represented in. Only these values can be assigned: base64.", "type": "string"}}, "type": "object"}, "RepositoryContentStreamGrades": {"additionalProperties": false, "description": "Content stream grades associated with an image tag and ids of images that participated in the evaluation of the current image's security grade.", "properties": {"grade": {"description": "THIS FIELD IS REQUIRED. Current image security grade. Only these values can be assigned: A, B, C, D, E, F, unknown.", "type": "string"}, "image_ids": {"description": "List of images that participated in the evaluation of the current image's security grade.", "items": {"$ref": "#/components/schemas/GradesImageIds"}, "type": "array"}, "image_ids#": {"$ref": "#/components/schemas/ArraySize"}, "tag": {"description": "THIS FIELD IS REQUIRED. Name of floating tag associated with the image.", "type": "string"}}, "type": "object"}, "RepositoryDisplayData": {"additionalProperties": false, "description": "Display data for Catalog.", "properties": {"long_description": {"description": "THIS FIELD IS REQUIRED. The long description of the repository.", "type": "string"}, "long_description_markdown": {"description": "Markdown for the long description of the repository.", "type": "string"}, "name": {"description": "THIS FIELD IS REQUIRED. The repository name.", "type": "string"}, "openshift_tags": {"description": "The io_openshift_tags.", "nullable": true, "type": "string"}, "short_description": {"description": "THIS FIELD IS REQUIRED. The short description of the repository.", "type": "string"}}, "type": "object"}, "RepositoryDocumentationLink": {"additionalProperties": false, "description": "Information about documentation link.", "properties": {"title": {"description": "THIS FIELD IS REQUIRED. Title of the link.", "type": "string"}, "type": {"description": "THIS FIELD IS REQUIRED. The type of collateral. Only these values can be assigned: Customer Case Study, Documentation, White Paper, Blog, Demo Video, Product Datasheet, Recorded Webinar, Solution Brief.", "type": "string"}, "url": {"description": "THIS FIELD IS REQUIRED. The URL for the documentation.", "format": "uri", "type": "string"}}, "type": "object"}, "RepositoryMetrics": {"additionalProperties": false, "description": "Metrics information.", "properties": {"last_update_date": {"description": "The date and time when these metrics were last updated for the repository.", "format": "date-time", "type": "string"}, "pulls_in_last_30_days": {"description": "The number of pulls in the last 30 days for the repository.", "type": "integer"}}, "type": "object"}, "RepositoryRunsOn": {"additionalProperties": false, "description": "Describes what the image can be run on.", "properties": {"openshift_online": {"description": "Can the image run on openshift_online.", "type": "boolean"}}, "type": "object"}, "Results": {"additionalProperties": false, "description": "The test results stored in lists based on result status.", "properties": {"errors": {"description": "THIS FIELD IS REQUIRED. Test results of cert project certification", "items": {"$ref": "#/components/schemas/TestResults"}, "type": "array"}, "errors#": {"$ref": "#/components/schemas/ArraySize"}, "failed": {"description": "THIS FIELD IS REQUIRED. Test results of cert project certification", "items": {"$ref": "#/components/schemas/TestResults"}, "type": "array"}, "failed#": {"$ref": "#/components/schemas/ArraySize"}, "passed": {"description": "THIS FIELD IS REQUIRED. Test results of cert project certification", "items": {"$ref": "#/components/schemas/TestResults"}, "type": "array"}, "passed#": {"$ref": "#/components/schemas/ArraySize"}, "warning": {"description": "Test results of cert project certification", "items": {"$ref": "#/components/schemas/TestResults"}, "type": "array"}, "warning#": {"$ref": "#/components/schemas/ArraySize"}}, "type": "object"}, "RpmsItems": {"additionalProperties": false, "description": "RPM content of an image.", "properties": {"architecture": {"description": "RPM architecture.", "type": "string"}, "gpg": {"description": "GPG key used to sign the RPM.", "type": "string"}, "name": {"description": "RPM name.", "type": "string"}, "nvra": {"description": "RPM name, version, release, and architecture.", "type": "string"}, "release": {"description": "RPM release.", "type": "string"}, "srpm_name": {"description": "Source RPM name.", "type": "string"}, "srpm_nevra": {"description": "Source RPM NEVRA (name, epoch, version, release, architecture).", "type": "string"}, "summary": {"description": "RPM summary.", "type": "string"}, "version": {"description": "RPM version.", "type": "string"}}, "type": "object"}, "SearchAliasesItems": {"additionalProperties": false, "description": "", "properties": {"key": {"description": "THIS FIELD IS REQUIRED.", "maxLength": 50, "minLength": 1, "type": "string"}, "value": {"description": "THIS FIELD IS REQUIRED.", "maxLength": 100, "minLength": 1, "type": "string"}}, "type": "object"}, "SignatureInfo": {"additionalProperties": false, "description": "", "properties": {"key_long_id": {"description": "THIS FIELD IS REQUIRED. The long 16-byte gpg key id.", "type": "string"}, "tags": {"description": "List of image tags that are signed with the given key.", "items": {"type": "string"}, "minItems": 1, "type": "array"}, "tags#": {"$ref": "#/components/schemas/ArraySize"}}, "type": "object"}, "SingleArchImage": {"additionalProperties": false, "description": "Single_arch image which is part of the manifest_list_digest", "properties": {"_links": {"additionalProperties": false, "description": "This field is read only.", "properties": {"container_image": {"additionalProperties": false, "properties": {"href": {"description": "URI to the container image.", "type": "string"}}, "type": "object", "x-endpoint-ref": "/v1.graphql_images_get_image_by_id", "x-parameter-map": {"identifier": "image_id"}}}, "type": "object"}, "image_id": {"description": "Unique identifier for the container image.", "type": "string"}}, "type": "object"}, "SortByMembers": {"additionalProperties": false, "description": "Combination of field name and the sorting direction used to sort the responses. If multiple pairs are set, they go from the most important to the least important.", "properties": {"field": {"description": "THIS FIELD IS REQUIRED. Name of the field that should be used to sort results. If the field is nested, use dot notation.", "type": "string"}, "order": {"description": "If the fields should be in ascending or descending order. Only these values can be assigned: DESC, ASC.", "type": "string"}}, "type": "object"}, "StatusGQL": {"additionalProperties": false, "description": "Status object of services and components on which the GraphQL Pyxis depends on.", "properties": {"pyxis_rest": {"type": "boolean"}}, "type": "object"}, "Supplier": {"additionalProperties": false, "description": "The organization that supplied the component. The supplier may often be the manufacturer, but may also be a distributor or repackager.", "properties": {"contact": {"$ref": "#/components/schemas/SupplierContact", "description": "A contact at the organization."}, "name": {"description": "The name of the organization.", "type": "string"}, "url": {"description": "The URL of the organization.", "items": {"format": "uri", "type": "string"}, "type": "array"}, "url#": {"$ref": "#/components/schemas/ArraySize"}}, "type": "object"}, "SupplierContact": {"additionalProperties": false, "description": "A contact at the organization.", "properties": {"email": {"description": "The email address of the contact.", "format": "email", "type": "string"}, "name": {"description": "The name of a contact.", "type": "string"}, "phone": {"description": "The phone number of the contact.", "type": "string"}}, "type": "object"}, "Support": {"additionalProperties": false, "description": "This field is required when the product listing is published.", "properties": {"description": {"maxLength": 500, "minLength": 1, "nullable": true, "type": "string"}, "email_address": {"format": "email", "maxLength": 100, "minLength": 1, "nullable": true, "type": "string"}, "phone_number": {"maxLength": 50, "minLength": 1, "nullable": true, "type": "string"}, "url": {"description": "THIS FIELD IS REQUIRED.", "format": "uri", "maxLength": 2048, "minLength": 1, "type": "string"}}, "type": "object"}, "SwidText": {"additionalProperties": false, "description": "Specifies the metadata and content of the SWID tag.", "properties": {"content": {"description": "THIS FIELD IS REQUIRED. The attachment data. Proactive controls such as input validation and sanitization should be employed to prevent misuse of attachment text.", "type": "string"}, "content_type": {"default": "text/plain", "description": "Specifies the content type of the text. Defaults to text/plain if not specified.", "type": "string"}, "encoding": {"description": "Specifies the optional encoding the text is represented in. Only these values can be assigned: base64.", "type": "string"}}, "type": "object"}, "TestLibrary": {"additionalProperties": false, "description": "The test library of the test result.", "properties": {"commit": {"type": "string"}, "name": {"description": "THIS FIELD IS REQUIRED.", "type": "string"}, "version": {"type": "string"}}, "type": "object"}, "TestResults": {"additionalProperties": false, "description": "The cert project pipeline test result.", "properties": {"check_url": {"format": "uri", "type": "string"}, "description": {"description": "THIS FIELD IS REQUIRED.", "type": "string"}, "elapsed_time": {"description": "THIS FIELD IS REQUIRED.", "format": "float", "type": "number"}, "help": {"type": "string"}, "knowledgebase_url": {"format": "uri", "type": "string"}, "name": {"description": "THIS FIELD IS REQUIRED.", "type": "string"}, "suggestion": {"type": "string"}}, "type": "object"}, "TestedOn": {"additionalProperties": false, "description": "A platform where tests were executed.", "properties": {"name": {"description": "THIS FIELD IS REQUIRED.", "type": "string"}, "version": {"description": "THIS FIELD IS REQUIRED.", "type": "string"}}, "type": "object"}, "Tool": {"additionalProperties": false, "description": "Stores data about software tools, e.g. Preflight version. Read only external access. Used for supported version check.", "properties": {"_id": {"description": "MongoDB unique _id This field is read only.", "type": "string"}, "commit": {"description": "THIS FIELD IS REQUIRED. Commit hash of the tool version. This field is read only.", "type": "string"}, "creation_date": {"description": "The date when the entry was created. Value is created automatically on creation. This field is read only.", "format": "date-time", "type": "string"}, "enabled_for_testing": {"default": true, "description": "Whether this tool version is enabled for testing. This field is read only.", "type": "boolean"}, "last_update_date": {"description": "The date when the entry was last updated. This field is read only.", "format": "date-time", "type": "string"}, "name": {"description": "THIS FIELD IS REQUIRED. Name of the tool. This field is read only.", "type": "string"}, "version": {"description": "THIS FIELD IS REQUIRED. Tool version, e.g. 1.4.0 This field is read only.", "type": "string"}}, "type": "object"}, "UncompressedLayerSize": {"additionalProperties": false, "description": "", "properties": {"layer_id": {"description": "THIS FIELD IS REQUIRED. The SHA256 layer ID.", "type": "string"}, "size_bytes": {"description": "THIS FIELD IS REQUIRED. The uncompressed layer size in bytes.", "type": "integer"}}, "type": "object"}}, "securitySchemes": {"ApiKeyAuth": {"description": "API key.\n\nFor some endpoints, this is an optional form of authorization that\ngives access to non-public data of the company/user that the API key\nbelongs to.\n", "in": "header", "name": "X-API-KEY", "type": "apiKey", "x-apikeyInfoFunc": "pyxis.rest.utils.dummy_auth_validation", "x-family": "api-key"}, "JWT": {"bearerFormat": "JWT", "description": "RedHat connect JWT authorization.\n\nFor some endpoints, this is an optional form of authorization that\ngives access to non-public data of the company/user that the JWT\nbelongs to.\n", "scheme": "bearer", "type": "http", "x-bearerInfoFunc": "pyxis.rest.utils.dummy_auth_validation", "x-family": "jwt"}}}, "externalDocs": {"description": "Find out more about Pyxis", "url": "/api/containers/docs/"}, "info": {"description": "Pyxis version `0e0b9263`, released on `2024-06-13`.", "title": "Pyxis", "version": "3.0.0"}, "openapi": "3.0.3", "paths": {"/advisories/redhat": {"get": {"operationId": "graphql.advisories.get_advisories", "parameters": [{"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/RedHatContainerAdvisory"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "RedHatContainerAdvisory not found"}}, "security": [], "summary": "Get container Red Hat advisories.\nYou only have access to advisories that are already shipped.", "tags": ["Advisories"], "x-graphql-data-path": ["data", "find_advisories"], "x-graphql-parameter-mapping": {"filter": "filter", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_advisories", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/RedHatContainerAdvisory"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/advisories/redhat/id/{identifier}": {"get": {"operationId": "graphql.advisories.get_advisory_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RedHatContainerAdvisory"}}}, "description": "Success"}, "404": {"description": "RedHatContainerAdvisory not found"}}, "security": [], "summary": "Get Red Hat advisory by ID.\nYou only have access to advisories that are already shipped.", "tags": ["Advisories"], "x-graphql-data-path": ["data", "get_advisory", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_advisory", "x-graphql-response": {"$ref": "#/components/schemas/RedHatContainerAdvisory"}}}, "/components": {"get": {"operationId": "graphql.content_manifest_components.find_content_manifest_components", "parameters": [{"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContentManifestComponent"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ContentManifestComponent not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "List all content manifest components.", "tags": ["Content Manifest Components"], "x-graphql-data-path": ["data", "find_content_manifest_components"], "x-graphql-parameter-mapping": {"filter": "filter", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_content_manifest_components", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContentManifestComponent"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/components/id/{identifier}": {"get": {"operationId": "graphql.content_manifest_components.get_content_manifest_component", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContentManifestComponent"}}}, "description": "Success"}, "404": {"description": "ContentManifestComponent not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get an content manifest component by ID.", "tags": ["Content Manifest Components"], "x-graphql-data-path": ["data", "get_content_manifest_component", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_content_manifest_component", "x-graphql-response": {"$ref": "#/components/schemas/ContentManifestComponent"}}, "patch": {"operationId": "graphql.content_manifest_components.update_content_manifest_component", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContentManifestComponent"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContentManifestComponent"}}}, "description": "Success"}, "400": {"description": "Bad request for ContentManifestComponent"}, "404": {"description": "ContentManifestComponent not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Update/Patch a content manifest component by ID.", "tags": ["Content Manifest Components"], "x-graphql-data-path": ["data", "update_content_manifest_component", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "update_content_manifest_component", "x-graphql-response": {"$ref": "#/components/schemas/ContentManifestComponent"}}}, "/content-manifests": {"get": {"operationId": "graphql.content_manifest.find_content_manifests", "parameters": [{"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContentManifest"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ContentManifest not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get all content manifests.", "tags": ["Content Manifests"], "x-graphql-data-path": ["data", "find_content_manifests"], "x-graphql-parameter-mapping": {"filter": "filter", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_content_manifests", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContentManifest"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}, "post": {"operationId": "graphql.content_manifest.create_content_manifest", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContentManifest"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContentManifest"}}}, "description": "Success"}, "400": {"description": "Bad request for ContentManifest"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Create a content manifest.", "tags": ["Content Manifests"], "x-graphql-data-path": ["data", "create_content_manifest", "data"], "x-graphql-parameter-mapping": {"input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "create_content_manifest", "x-graphql-response": {"$ref": "#/components/schemas/ContentManifest"}}}, "/content-manifests/id/{identifier}": {"get": {"operationId": "graphql.content_manifest.get_content_manifest", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContentManifest"}}}, "description": "Success"}, "404": {"description": "ContentManifest not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get a content manifest by ID.", "tags": ["Content Manifests"], "x-graphql-data-path": ["data", "get_content_manifest", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_content_manifest", "x-graphql-response": {"$ref": "#/components/schemas/ContentManifest"}}, "patch": {"operationId": "graphql.content_manifest.patch_content_manifest", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContentManifest"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContentManifest"}}}, "description": "Success"}, "400": {"description": "Bad request for ContentManifest"}, "404": {"description": "ContentManifest not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Partially update a content manifest.", "tags": ["Content Manifests"], "x-graphql-data-path": ["data", "update_content_manifest", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "update_content_manifest", "x-graphql-response": {"$ref": "#/components/schemas/ContentManifest"}}}, "/content-manifests/id/{identifier}/component": {"post": {"operationId": "graphql.content_manifest_components.create_content_manifest_component_for_manifest", "parameters": [{"description": "ID of the associated Content Manifest.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContentManifestComponent"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContentManifestComponent"}}}, "description": "Success"}, "400": {"description": "Bad request for ContentManifestComponent"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Create a new content manifest component for manifest.", "tags": ["Content Manifest Components"], "x-graphql-data-path": ["data", "create_content_manifest_component_for_manifest", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "create_content_manifest_component_for_manifest", "x-graphql-response": {"$ref": "#/components/schemas/ContentManifestComponent"}}}, "/images": {"get": {"operationId": "graphql.images.get_images", "parameters": [{"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerImage"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ContainerImage not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get container images. Exclude total for improved performance.", "tags": ["Images"], "x-graphql-data-path": ["data", "find_images"], "x-graphql-parameter-mapping": {"filter": "filter", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_images", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerImage"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}, "post": {"operationId": "graphql.images.patch_image_by_id", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImage"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImage"}}}, "description": "Success"}, "400": {"description": "Bad request for ContainerImage"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Create image.", "tags": ["Images"], "x-graphql-data-path": ["data", "create_image", "data"], "x-graphql-parameter-mapping": {"input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "create_image", "x-graphql-response": {"$ref": "#/components/schemas/ContainerImage"}}}, "/images/id/{identifier}": {"get": {"operationId": "graphql.images.get_image_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImage"}}}, "description": "Success"}, "404": {"description": "ContainerImage not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get container image by ID.", "tags": ["Images"], "x-graphql-data-path": ["data", "get_image", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_image", "x-graphql-response": {"$ref": "#/components/schemas/ContainerImage"}}, "patch": {"operationId": "graphql.images.update_image_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImage"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImage"}}}, "description": "Success"}, "400": {"description": "Bad request for ContainerImage"}, "404": {"description": "ContainerImage not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Update/Patch image.", "tags": ["Images"], "x-graphql-data-path": ["data", "update_image", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "update_image", "x-graphql-response": {"$ref": "#/components/schemas/ContainerImage"}}, "put": {"operationId": "graphql.images.put_image_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImage"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImage"}}}, "description": "Success"}, "400": {"description": "Bad request for ContainerImage"}, "404": {"description": "ContainerImage not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Replace image.", "tags": ["Images"], "x-graphql-data-path": ["data", "replace_image", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "replace_image", "x-graphql-response": {"$ref": "#/components/schemas/ContainerImage"}}}, "/images/id/{identifier}/artifacts": {"get": {"operationId": "graphql.cert_project_artifacts.get_certification_artifacts_by_image_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertProjectArtifact"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "CertProjectArtifact not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get artifacts using container image ID", "tags": ["Images"], "x-graphql-data-path": ["data", "get_certification_artifacts_by_image_id"], "x-graphql-parameter-mapping": {"filter": "filter", "id": "identifier", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "get_certification_artifacts_by_image_id", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertProjectArtifact"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/images/id/{identifier}/files": {"get": {"operationId": "graphql.files.get_files_by_image_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerFile"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ContainerFile not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get files for an images.", "tags": ["Images"], "x-graphql-data-path": ["data", "find_image_files"], "x-graphql-parameter-mapping": {"filter": "filter", "id": "identifier", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_image_files", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerFile"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/images/id/{identifier}/requests": {"get": {"operationId": "graphql.cert_project_image_request.get_certification_image_requests_by_image_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertProjectImageRequest"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "CertProjectImageRequest not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get image request using container image ID", "tags": ["Certification projects requests"], "x-graphql-data-path": ["data", "get_certification_image_requests_by_image_id"], "x-graphql-parameter-mapping": {"filter": "filter", "id": "identifier", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "get_certification_image_requests_by_image_id", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertProjectImageRequest"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/images/id/{identifier}/rpm-manifest": {"get": {"operationId": "graphql.rpm_manifests.get_rpm_manifest_for_image", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImageRPMManifest"}}}, "description": "Success"}, "404": {"description": "ContainerImageRPMManifest not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get the RPM manifest for an image.", "tags": ["Images"], "x-graphql-data-path": ["data", "get_image_rpm_manifest", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_image_rpm_manifest", "x-graphql-response": {"$ref": "#/components/schemas/ContainerImageRPMManifest"}}, "post": {"operationId": "graphql.rpm_manifests.create_rpm_manifest_for_image", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImageRPMManifest"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImageRPMManifest"}}}, "description": "Success"}, "400": {"description": "Bad request for ContainerImageRPMManifest"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Create a new RPM manifest for an image.", "tags": ["Images"], "x-graphql-data-path": ["data", "create_image_rpm_manifest", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "create_image_rpm_manifest", "x-graphql-response": {"$ref": "#/components/schemas/ContainerImageRPMManifest"}}}, "/images/id/{identifier}/test-results": {"get": {"operationId": "graphql.cert_project_test_result.get_certification_test_results_by_image_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertProjectTestResult"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "CertProjectTestResult not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get test results using container image ID", "tags": ["Images"], "x-graphql-data-path": ["data", "get_test_results_by_image_id"], "x-graphql-parameter-mapping": {"filter": "filter", "id": "identifier", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "get_test_results_by_image_id", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertProjectTestResult"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/images/id/{identifier}/vulnerabilities": {"get": {"operationId": "graphql.vulnerabilities.get_vulnerabilities_by_image_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerImageVulnerability"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ContainerImageVulnerability not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get a list of image vulnerabilities associated with an image. Exclude total for improved performance.", "tags": ["Images"], "x-graphql-data-path": ["data", "find_image_vulnerabilities"], "x-graphql-parameter-mapping": {"filter": "filter", "id": "identifier", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_image_vulnerabilities", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerImageVulnerability"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/images/nvr/{nvr}": {"get": {"operationId": "graphql.images.get_images_by_nvr", "parameters": [{"description": "Brew NVR of the image.", "in": "path", "name": "nvr", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerImage"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ContainerImage not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get container images based on their Brew NVR. Exclude total for improved performance.", "tags": ["Images"], "x-graphql-data-path": ["data", "find_images_by_nvr"], "x-graphql-parameter-mapping": {"filter": "filter", "nvr": "nvr", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_images_by_nvr", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerImage"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/images/registry/{registry}/repository/{repository}/manifest_digest/{manifest_digest}": {"get": {"operationId": "graphql.images.get_image_by_manifest_digest", "parameters": [{"description": "Container registry. All Red Hat containers use the value of 'registry.access.redhat.com' (regardless of whether they are shipped only to the terms-based registry at registry.redhat.io). Partner containers use the value of 'registry.connect.redhat.com'.", "in": "path", "name": "registry", "required": true, "schema": {"type": "string"}}, {"description": "Path of the repository", "in": "path", "name": "repository", "required": true, "schema": {"format": "path", "type": "string"}}, {"description": "Image manifest digest of the resource.", "in": "path", "name": "manifest_digest", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImage"}}}, "description": "Success"}, "404": {"description": "ContainerImage not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get container image by manifest digest.", "tags": ["Images"], "x-graphql-data-path": ["data", "get_image_by_manifest_digest_registry_and_repository", "data"], "x-graphql-parameter-mapping": {"manifest_digest": "manifest_digest", "registry": "registry", "repository": "repository"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_image_by_manifest_digest_registry_and_repository", "x-graphql-response": {"$ref": "#/components/schemas/ContainerImage"}}, "patch": {"operationId": "graphql.images.patch_image_by_manifest_digest", "parameters": [{"description": "Container registry. All Red Hat containers use the value of 'registry.access.redhat.com' (regardless of whether they are shipped only to the terms-based registry at registry.redhat.io). Partner containers use the value of 'registry.connect.redhat.com'.", "in": "path", "name": "registry", "required": true, "schema": {"type": "string"}}, {"description": "Path of the repository", "in": "path", "name": "repository", "required": true, "schema": {"format": "path", "type": "string"}}, {"description": "Image manifest digest of the resource.", "in": "path", "name": "manifest_digest", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImage"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImage"}}}, "description": "Success"}, "400": {"description": "Bad request for ContainerImage"}, "404": {"description": "ContainerImage not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Update/Patch image identified by image manifest digest.", "tags": ["Images"], "x-graphql-data-path": ["data", "update_image_by_manifest_digest_registry_and_repository", "data"], "x-graphql-parameter-mapping": {"input": "body", "manifest_digest": "manifest_digest", "registry": "registry", "repository": "repository"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "update_image_by_manifest_digest_registry_and_repository", "x-graphql-response": {"$ref": "#/components/schemas/ContainerImage"}}, "put": {"operationId": "graphql.images.put_image_by_manifest_digest", "parameters": [{"description": "Container registry. All Red Hat containers use the value of 'registry.access.redhat.com' (regardless of whether they are shipped only to the terms-based registry at registry.redhat.io). Partner containers use the value of 'registry.connect.redhat.com'.", "in": "path", "name": "registry", "required": true, "schema": {"type": "string"}}, {"description": "Path of the repository", "in": "path", "name": "repository", "required": true, "schema": {"format": "path", "type": "string"}}, {"description": "Image manifest digest of the resource.", "in": "path", "name": "manifest_digest", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImage"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImage"}}}, "description": "Success"}, "400": {"description": "Bad request for ContainerImage"}, "404": {"description": "ContainerImage not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Replace image identified by image manifest digest.", "tags": ["Images"], "x-graphql-data-path": ["data", "replace_image_by_manifest_digest_registry_and_repository", "data"], "x-graphql-parameter-mapping": {"input": "body", "manifest_digest": "manifest_digest", "registry": "registry", "repository": "repository"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "replace_image_by_manifest_digest_registry_and_repository", "x-graphql-response": {"$ref": "#/components/schemas/ContainerImage"}}}, "/images/rpm-manifest/id/{identifier}": {"get": {"operationId": "graphql.rpm_manifests.get_rpm_manifest_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImageRPMManifest"}}}, "description": "Success"}, "404": {"description": "ContainerImageRPMManifest not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get an RPM manifest by ID.", "tags": ["Images"], "x-graphql-data-path": ["data", "get_rpm_manifest", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_rpm_manifest", "x-graphql-response": {"$ref": "#/components/schemas/ContainerImageRPMManifest"}}, "patch": {"operationId": "graphql.rpm_manifests.patch_rpm_manifest_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImageRPMManifest"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImageRPMManifest"}}}, "description": "Success"}, "400": {"description": "Bad request for ContainerImageRPMManifest"}, "404": {"description": "ContainerImageRPMManifest not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Update/Patch a RPM manifest by ID.", "tags": ["Images"], "x-graphql-data-path": ["data", "update_image_rpm_manifest", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "update_image_rpm_manifest", "x-graphql-response": {"$ref": "#/components/schemas/ContainerImageRPMManifest"}}, "put": {"operationId": "graphql.rpm_manifests.put_rpm_manifest_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImageRPMManifest"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImageRPMManifest"}}}, "description": "Success"}, "400": {"description": "Bad request for ContainerImageRPMManifest"}, "404": {"description": "ContainerImageRPMManifest not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Replace a RPM Manifest by ID.", "tags": ["Images"], "x-graphql-data-path": ["data", "replace_image_rpm_manifest", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "replace_image_rpm_manifest", "x-graphql-response": {"$ref": "#/components/schemas/ContainerImageRPMManifest"}}}, "/keys": {"post": {"operationId": "graphql.api_keys.generate_key", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApiKeyOrgIDWithDescriptionRequest"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApiKeyResp"}}}, "description": "Success"}, "400": {"description": "Bad request for ApiKeyResp"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Create an API key.", "tags": ["API Keys"], "x-graphql-data-path": ["data", "create_api_key", "data"], "x-graphql-parameter-mapping": {"input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "create_api_key", "x-graphql-response": {"$ref": "#/components/schemas/ApiKeyResp"}}}, "/keys/org-id/{org_id}": {"get": {"operationId": "graphql.api_keys.get_keys_by_org_id", "parameters": [{"description": "Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect.", "in": "path", "name": "org_id", "required": true, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ApiKey"}, "type": "array"}}}, "description": "Success"}, "404": {"description": "ApiKey not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get a list of API keys associated with the given ORG ID.", "tags": ["API Keys"], "x-graphql-data-path": ["data", "get_key", "data"], "x-graphql-parameter-mapping": {"org_id": "org_id"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_key", "x-graphql-response": {"items": {"$ref": "#/components/schemas/ApiKey"}, "type": "array"}}}, "/keys/{key_id}": {"delete": {"operationId": "graphql.api_keys.delete_key_by_id", "parameters": [{"in": "path", "name": "key_id", "required": true, "schema": {"type": "integer"}}, {"description": "Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect.", "in": "query", "name": "org_id", "required": true, "schema": {"type": "integer"}}], "responses": {"204": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApiKey"}}}, "description": "Success"}, "404": {"description": "ApiKey not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Delete API key.", "tags": ["API Keys"], "x-graphql-data-path": ["data", "delete_api_key", "data"], "x-graphql-parameter-mapping": {"key_id": "key_id", "org_id": "org_id"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "delete_api_key", "x-graphql-response": {"$ref": "#/components/schemas/ApiKey"}}}, "/operators/bundles": {"get": {"operationId": "graphql.operators.get_operator_bundles", "parameters": [{"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"deprecated": true, "description": "Organization as understood by iib, e.g. \"redhat-marketplace\". | Deprecation reason: Deprecated and replaced by filtering.", "in": "query", "name": "organization", "schema": {"type": "string"}}, {"deprecated": true, "description": "The channel for which this bundle is being released. | Deprecation reason: Deprecated and replaced by filtering.", "in": "query", "name": "channel_name", "schema": {"type": "string"}}, {"deprecated": true, "description": "The name of the operator, e.g. \"amq-streams\". | Deprecation reason: Deprecated and replaced by filtering.", "in": "query", "name": "package", "schema": {"type": "string"}}, {"deprecated": true, "description": "If provided and true then signify that the bundles have the latest (max) OCP version. | Deprecation reason: Deprecated, parameter is not used and will be removed.", "in": "query", "name": "latest_ocp_version", "schema": {"type": "boolean"}}, {"description": "Specific OCP version for a bundle.", "in": "query", "name": "ocp_version", "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/OperatorBundle"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "OperatorBundle not found"}}, "security": [], "summary": "Get a list of operator bundles.", "tags": ["Operators"], "x-graphql-data-path": ["data", "find_operator_bundles"], "x-graphql-parameter-mapping": {"channel_name": "channel_name", "filter": "filter", "latest_ocp_version": "latest_ocp_version", "ocp_version": "ocp_version", "organization": "organization", "package": "package", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_operator_bundles", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/OperatorBundle"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/operators/indices": {"get": {"operationId": "graphql.operators.get_indices", "parameters": [{"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"deprecated": true, "description": "Organization as understood by iib, e.g. \"redhat-marketplace\". | Deprecation reason: Deprecated and replaced by filtering.", "in": "query", "name": "organization", "schema": {"type": "string"}}, {"description": "Specific OCP version for a bundle.", "in": "query", "name": "ocp_version", "schema": {"type": "string"}}, {"description": "Supported OCP versions range.\nSee https://docs.engineering.redhat.com/display/CFC/Delivery\n", "in": "query", "name": "ocp_versions_range", "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/OperatorIndex"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "OperatorIndex not found"}}, "security": [], "summary": "Get a list of operator indexs.", "tags": ["Operators"], "x-graphql-data-path": ["data", "find_operator_indices"], "x-graphql-parameter-mapping": {"filter": "filter", "ocp_version": "ocp_version", "ocp_versions_range": "ocp_versions_range", "organization": "organization", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_operator_indices", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/OperatorIndex"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/operators/indices/id/{identifier}": {"get": {"operationId": "graphql.operators.get_index", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/OperatorIndex"}}}, "description": "Success"}, "404": {"description": "OperatorIndex not found"}}, "security": [], "summary": "Get an operator index by ID.", "tags": ["Operators"], "x-graphql-data-path": ["data", "get_operator_index", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_operator_index", "x-graphql-response": {"$ref": "#/components/schemas/OperatorIndex"}}}, "/operators/packages": {"get": {"operationId": "graphql.operators.get_packages", "parameters": [{"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/OperatorPackage"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "OperatorPackage not found"}}, "security": [], "summary": "Get a list of operator packages.", "tags": ["Operators"], "x-graphql-data-path": ["data", "find_operator_packages"], "x-graphql-parameter-mapping": {"filter": "filter", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_operator_packages", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/OperatorPackage"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/operators/packages/id/{identifier}": {"get": {"operationId": "graphql.operators.get_package_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/OperatorPackage"}}}, "description": "Success"}, "404": {"description": "OperatorPackage not found"}}, "security": [], "summary": "Get an operator package by ID.", "tags": ["Operators"], "x-graphql-data-path": ["data", "get_operator_package", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_operator_package", "x-graphql-response": {"$ref": "#/components/schemas/OperatorPackage"}}}, "/ping": {"get": {"operationId": "pyxis.rest.health.ping", "responses": {"200": {"content": {"text/plain": {"schema": {"type": "string"}}}, "description": "Success"}}, "summary": "Basic availability endpoint.", "tags": ["Status"]}}, "/product-listings": {"get": {"operationId": "graphql.product_listings.get_product_listings", "parameters": [{"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ProductListing"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ProductListing not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get all product listings.", "tags": ["Product listings"], "x-graphql-data-path": ["data", "find_product_listings"], "x-graphql-parameter-mapping": {"filter": "filter", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_product_listings", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ProductListing"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}, "post": {"operationId": "graphql.product_listings.create_product_listing", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProductListing"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProductListing"}}}, "description": "Success"}, "400": {"description": "Bad request for ProductListing"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Create a product listing.", "tags": ["Product listings"], "x-graphql-data-path": ["data", "create_product_listing", "data"], "x-graphql-parameter-mapping": {"input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "create_product_listing", "x-graphql-response": {"$ref": "#/components/schemas/ProductListing"}}}, "/product-listings/id/{identifier}": {"get": {"operationId": "graphql.product_listings.get_product_listing_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProductListing"}}}, "description": "Success"}, "404": {"description": "ProductListing not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get a product listing.", "tags": ["Product listings"], "x-graphql-data-path": ["data", "get_product_listing", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_product_listing", "x-graphql-response": {"$ref": "#/components/schemas/ProductListing"}}, "patch": {"operationId": "graphql.product_listings.patch_product_listing", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProductListing"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProductListing"}}}, "description": "Success"}, "400": {"description": "Bad request for ProductListing"}, "404": {"description": "ProductListing not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Partially update a product listing", "tags": ["Product listings"], "x-graphql-data-path": ["data", "update_product_listing", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "update_product_listing", "x-graphql-response": {"$ref": "#/components/schemas/ProductListing"}}, "put": {"operationId": "graphql.product_listings.replace_product_listing", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProductListing"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProductListing"}}}, "description": "Success"}, "400": {"description": "Bad request for ProductListing"}, "404": {"description": "ProductListing not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Update a product listing.", "tags": ["Product listings"], "x-graphql-data-path": ["data", "replace_product_listing", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "replace_product_listing", "x-graphql-response": {"$ref": "#/components/schemas/ProductListing"}}}, "/product-listings/id/{identifier}/projects/certification": {"get": {"operationId": "graphql.cert_projects.get_certification_projects_by_product_listing_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertificationProject"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "CertificationProject not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get certification projects associated with product listing.", "tags": ["Product listings"], "x-graphql-data-path": ["data", "find_product_listing_certification_projects"], "x-graphql-parameter-mapping": {"filter": "filter", "id": "identifier", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_product_listing_certification_projects", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertificationProject"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/product-listings/id/{identifier}/repositories": {"get": {"operationId": "graphql.repos.get_repos_by_product_listing", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerRepository"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ContainerRepository not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get all repositories belonging to product listing.", "tags": ["Product listings"], "x-graphql-data-path": ["data", "find_product_listing_repositories"], "x-graphql-parameter-mapping": {"filter": "filter", "id": "identifier", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_product_listing_repositories", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerRepository"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/product-listings/org-id/{org_id}/name/{name}": {"get": {"operationId": "graphql.product_listings.get_product_listings_by_name_and_org_id", "parameters": [{"description": "Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect.", "in": "path", "name": "org_id", "required": true, "schema": {"type": "integer"}}, {"description": "Name of product or project. Acts as a case-insensitive regex.", "in": "path", "name": "name", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ProductListing"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ProductListing not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get the product listings for a given org id and a name that either matches the product name or the attached project name.", "tags": ["Product listings"], "x-graphql-data-path": ["data", "find_product_listings_by_name_org_id"], "x-graphql-parameter-mapping": {"filter": "filter", "name": "name", "org_id": "org_id", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_product_listings_by_name_org_id", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ProductListing"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/projects/certification": {"post": {"operationId": "graphql.cert_projects.create_certification_project", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertificationProject"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertificationProject"}}}, "description": "Success"}, "400": {"description": "Bad request for CertificationProject"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Create a certification project.", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "create_certification_project", "data"], "x-graphql-parameter-mapping": {"input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "create_certification_project", "x-graphql-response": {"$ref": "#/components/schemas/CertificationProject"}}}, "/projects/certification/artifacts/id/{identifier}": {"get": {"operationId": "graphql.cert_project_artifacts.get_certification_artifact_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertProjectArtifact"}}}, "description": "Success"}, "404": {"description": "CertProjectArtifact not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get a certification project artifact by its ID", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "get_cert_project_artifact", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_cert_project_artifact", "x-graphql-response": {"$ref": "#/components/schemas/CertProjectArtifact"}}}, "/projects/certification/id/{identifier}": {"get": {"operationId": "graphql.cert_projects.get_certification_project_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertificationProject"}}}, "description": "Success"}, "404": {"description": "CertificationProject not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get certification project using its ID.", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "get_certification_project", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_certification_project", "x-graphql-response": {"$ref": "#/components/schemas/CertificationProject"}}, "patch": {"operationId": "graphql.cert_projects.update_certification_project", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertificationProject"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertificationProject"}}}, "description": "Success"}, "400": {"description": "Bad request for CertificationProject"}, "404": {"description": "CertificationProject not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Partially update a certification project.", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "update_certification_project", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "update_certification_project", "x-graphql-response": {"$ref": "#/components/schemas/CertificationProject"}}, "put": {"operationId": "graphql.cert_projects.replace_certification_project", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertificationProject"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertificationProject"}}}, "description": "Success"}, "400": {"description": "Bad request for CertificationProject"}, "404": {"description": "CertificationProject not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Update a certification project.", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "replace_certification_project", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "replace_certification_project", "x-graphql-response": {"$ref": "#/components/schemas/CertificationProject"}}}, "/projects/certification/id/{identifier}/artifacts": {"get": {"operationId": "graphql.cert_project_artifacts.get_certification_artifacts_by_cert_project_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertProjectArtifact"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "CertProjectArtifact not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get certification project artifacts using its cert project ID", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "get_cert_project_artifacts"], "x-graphql-parameter-mapping": {"filter": "filter", "id": "identifier", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "get_cert_project_artifacts", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertProjectArtifact"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}, "post": {"operationId": "graphql.cert_project_artifacts.create_certification_artifact", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertProjectArtifact"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertProjectArtifact"}}}, "description": "Success"}, "400": {"description": "Bad request for CertProjectArtifact"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Create a certification project artifact", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "create_certification_project_artifact", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "create_certification_project_artifact", "x-graphql-response": {"$ref": "#/components/schemas/CertProjectArtifact"}}}, "/projects/certification/id/{identifier}/images": {"get": {"operationId": "graphql.images.get_images_by_project_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerImage"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ContainerImage not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get images for certification project using its ID.", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "find_certification_projects_images"], "x-graphql-parameter-mapping": {"filter": "filter", "id": "identifier", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_certification_projects_images", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerImage"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/projects/certification/id/{identifier}/images/manifest-list-digest": {"get": {"operationId": "graphql.images.get_images_by_project_id_manifest_digests", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results. Structure your filter as if you were querying Images directly. E.g to filter by published repositories, use: repositories.published==true", "in": "query", "name": "filter", "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerImageManifestDigest"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ContainerImageManifestDigest not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get multi-arch container images grouped by manifest_list_digest by certification project id.", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "find_certification_projects_images_by_digest"], "x-graphql-parameter-mapping": {"filter": "filter", "id": "identifier", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_certification_projects_images_by_digest", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerImageManifestDigest"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/projects/certification/id/{identifier}/product-listings": {"get": {"operationId": "graphql.product_listings.get_product_listings_by_certification_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ProductListing"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ProductListing not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get product listings for certification project using its ID.", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "find_certification_projects_product_listings"], "x-graphql-parameter-mapping": {"filter": "filter", "id": "identifier", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_certification_projects_product_listings", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ProductListing"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/projects/certification/id/{identifier}/requests/images": {"get": {"operationId": "graphql.cert_project_image_request.get_certification_image_requests_by_cert_project_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertProjectImageRequest"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "CertProjectImageRequest not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get certification project image requests using its cert project ID", "tags": ["Certification projects requests"], "x-graphql-data-path": ["data", "get_certification_image_requests_by_cert_project_id"], "x-graphql-parameter-mapping": {"filter": "filter", "id": "identifier", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "get_certification_image_requests_by_cert_project_id", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertProjectImageRequest"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}, "post": {"operationId": "graphql.cert_project_image_request.create_certification_image_request", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertProjectImageRequest"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertProjectImageRequest"}}}, "description": "Success"}, "400": {"description": "Bad request for CertProjectImageRequest"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Create a certification project image request", "tags": ["Certification projects requests"], "x-graphql-data-path": ["data", "create_certification_project_image_request", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "create_certification_project_image_request", "x-graphql-response": {"$ref": "#/components/schemas/CertProjectImageRequest"}}}, "/projects/certification/id/{identifier}/secrets": {"get": {"operationId": "graphql.cert_projects.get_registry_secrets_by_certification_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrySecrets"}}}, "description": "Success"}, "404": {"description": "RegistrySecrets not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get registry secrets for certification project using its ID.", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "get_registry_secrets_by_certification_id", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_registry_secrets_by_certification_id", "x-graphql-response": {"$ref": "#/components/schemas/RegistrySecrets"}}}, "/projects/certification/id/{identifier}/test-results": {"get": {"operationId": "graphql.cert_project_test_result.get_certification_test_results_by_cert_project_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertProjectTestResult"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "CertProjectTestResult not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get certification project test results using its cert project ID", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "get_cert_project_test_results"], "x-graphql-parameter-mapping": {"filter": "filter", "id": "identifier", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "get_cert_project_test_results", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertProjectTestResult"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}, "post": {"operationId": "graphql.cert_project_test_result.create_certification_test_result", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertProjectTestResult"}}}, "required": true}, "responses": {"201": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertProjectTestResult"}}}, "description": "Success"}, "400": {"description": "Bad request for CertProjectTestResult"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Create a certification project test result", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "create_certification_project_test_result", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "create_certification_project_test_result", "x-graphql-response": {"$ref": "#/components/schemas/CertProjectTestResult"}}}, "/projects/certification/pid/{pid}": {"get": {"operationId": "graphql.cert_projects.get_certification_project_by_pid", "parameters": [{"description": "Red Hat Partner Connect project id.", "in": "path", "name": "pid", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertificationProject"}}}, "description": "Success"}, "404": {"description": "CertificationProject not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get certification project using Red Hat Connect project ID.", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "get_certification_project_by_pid", "data"], "x-graphql-parameter-mapping": {"pid": "pid"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_certification_project_by_pid", "x-graphql-response": {"$ref": "#/components/schemas/CertificationProject"}}}, "/projects/certification/requests/images": {"get": {"operationId": "graphql.cert_project_image_request.get_certification_image_requests", "parameters": [{"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertProjectImageRequest"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "CertProjectImageRequest not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get all certification project image requests", "tags": ["Certification projects requests"], "x-graphql-data-path": ["data", "get_certification_image_requests"], "x-graphql-parameter-mapping": {"filter": "filter", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "get_certification_image_requests", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertProjectImageRequest"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/projects/certification/requests/images/id/{identifier}": {"get": {"operationId": "graphql.cert_project_image_request.get_certification_image_request_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertProjectImageRequest"}}}, "description": "Success"}, "404": {"description": "CertProjectImageRequest not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get a certification project image request by its ID", "tags": ["Certification projects requests"], "x-graphql-data-path": ["data", "get_certification_image_request_by_id", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_certification_image_request_by_id", "x-graphql-response": {"$ref": "#/components/schemas/CertProjectImageRequest"}}}, "/projects/certification/test-results/id/{identifier}": {"get": {"operationId": "graphql.cert_project_test_result.get_certification_test_result_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertProjectTestResult"}}}, "description": "Success"}, "404": {"description": "CertProjectTestResult not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get a certification project test result by its ID", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "get_cert_project_test_result", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_cert_project_test_result", "x-graphql-response": {"$ref": "#/components/schemas/CertProjectTestResult"}}, "patch": {"operationId": "graphql.cert_project_test_result.patch_certification_test_result", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertProjectTestResult"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertProjectTestResult"}}}, "description": "Success"}, "400": {"description": "Bad request for CertProjectTestResult"}, "404": {"description": "CertProjectTestResult not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Patch certification project test result by its ID", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "update_certification_project_test_result", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "update_certification_project_test_result", "x-graphql-response": {"$ref": "#/components/schemas/CertProjectTestResult"}}}, "/projects/certification/test-results/tests": {"get": {"operationId": "graphql.cert_project_test_result.get_all_certification_test_results", "parameters": [{"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertProjectTestResult"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "CertProjectTestResult not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get all test results", "tags": ["Certification projects"], "x-graphql-data-path": ["data", "find_cert_project_test_results_by_id"], "x-graphql-parameter-mapping": {"filter": "filter", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_cert_project_test_results_by_id", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertProjectTestResult"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/repositories": {"get": {"operationId": "graphql.repos.get_repos", "parameters": [{"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerRepository"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ContainerRepository not found"}}, "security": [], "summary": "Get all repositories.", "tags": ["Repositories"], "x-graphql-data-path": ["data", "find_repositories"], "x-graphql-parameter-mapping": {"filter": "filter", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_repositories", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerRepository"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/repositories/id/{identifier}": {"get": {"operationId": "graphql.repos.get_repo_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerRepository"}}}, "description": "Success"}, "404": {"description": "ContainerRepository not found"}}, "security": [], "summary": "Get a repository by ID.", "tags": ["Repositories"], "x-graphql-data-path": ["data", "get_repository", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_repository", "x-graphql-response": {"$ref": "#/components/schemas/ContainerRepository"}}}, "/repositories/id/{identifier}/product-listings": {"get": {"operationId": "graphql.product_listings.get_product_listings_by_repo", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ProductListing"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ProductListing not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get all product listings associated with repository.", "tags": ["Repositories"], "x-graphql-data-path": ["data", "find_repository_product_listings"], "x-graphql-parameter-mapping": {"filter": "filter", "id": "identifier", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_repository_product_listings", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ProductListing"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/repositories/registry/{registry}/repository/{repository}": {"get": {"operationId": "graphql.repos.get_repo_by_path", "parameters": [{"description": "Container registry. All Red Hat containers use the value of 'registry.access.redhat.com' (regardless of whether they are shipped only to the terms-based registry at registry.redhat.io). Partner containers use the value of 'registry.connect.redhat.com'.", "in": "path", "name": "registry", "required": true, "schema": {"type": "string"}}, {"description": "Path of the repository", "in": "path", "name": "repository", "required": true, "schema": {"format": "path", "type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerRepository"}}}, "description": "Success"}, "404": {"description": "ContainerRepository not found"}}, "security": [], "summary": "Get a repository by registry and path (product line/image name)", "tags": ["Repositories"], "x-graphql-data-path": ["data", "get_repository_by_registry_path", "data"], "x-graphql-parameter-mapping": {"registry": "registry", "repository": "repository"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_repository_by_registry_path", "x-graphql-response": {"$ref": "#/components/schemas/ContainerRepository"}}}, "/repositories/registry/{registry}/repository/{repository}/grades": {"get": {"operationId": "graphql.grades.get_grades_by_repo", "parameters": [{"description": "Container registry. All Red Hat containers use the value of 'registry.access.redhat.com' (regardless of whether they are shipped only to the terms-based registry at registry.redhat.io). Partner containers use the value of 'registry.connect.redhat.com'.", "in": "path", "name": "registry", "required": true, "schema": {"type": "string"}}, {"description": "Path of the repository", "in": "path", "name": "repository", "required": true, "schema": {"format": "path", "type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ContainerGrades"}, "type": "array"}}}, "description": "Success"}, "404": {"description": "ContainerGrades not found"}}, "security": [], "summary": "List container grades for a repository.", "tags": ["Repositories"], "x-graphql-data-path": ["data", "find_repository_grades_by_registry_path", "data"], "x-graphql-parameter-mapping": {"filter": "filter", "page": "page", "page_size": "page_size", "registry": "registry", "repository": "repository", "sort_by": "sort_by"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "find_repository_grades_by_registry_path", "x-graphql-response": {"items": {"$ref": "#/components/schemas/ContainerGrades"}, "type": "array"}}}, "/repositories/registry/{registry}/repository/{repository}/images": {"get": {"operationId": "graphql.images.get_images_by_repo", "parameters": [{"description": "Container registry. All Red Hat containers use the value of 'registry.access.redhat.com' (regardless of whether they are shipped only to the terms-based registry at registry.redhat.io). Partner containers use the value of 'registry.connect.redhat.com'.", "in": "path", "name": "registry", "required": true, "schema": {"type": "string"}}, {"description": "Path of the repository", "in": "path", "name": "repository", "required": true, "schema": {"format": "path", "type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerImage"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ContainerImage not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "List images for a repository.", "tags": ["Repositories"], "x-graphql-data-path": ["data", "find_repository_images_by_registry_path"], "x-graphql-parameter-mapping": {"filter": "filter", "page": "page", "page_size": "page_size", "registry": "registry", "repository": "repository", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_repository_images_by_registry_path", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerImage"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/repositories/registry/{registry}/repository/{repository}/operators/bundles": {"get": {"operationId": "graphql.operators.get_operator_bundles_by_registry_path", "parameters": [{"description": "Container registry. All Red Hat containers use the value of 'registry.access.redhat.com' (regardless of whether they are shipped only to the terms-based registry at registry.redhat.io). Partner containers use the value of 'registry.connect.redhat.com'.", "in": "path", "name": "registry", "required": true, "schema": {"type": "string"}}, {"description": "Path of the repository", "in": "path", "name": "repository", "required": true, "schema": {"format": "path", "type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/OperatorBundle"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "OperatorBundle not found"}}, "security": [], "summary": "List operator bundles for a repository.", "tags": ["Repositories"], "x-graphql-data-path": ["data", "find_repository_operator_bundles_by_registry_path"], "x-graphql-parameter-mapping": {"filter": "filter", "page": "page", "page_size": "page_size", "registry": "registry", "repository": "repository", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_repository_operator_bundles_by_registry_path", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/OperatorBundle"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/repositories/registry/{registry}/repository/{repository}/product-listings": {"get": {"operationId": "graphql.product_listings.find_product_listings_by_repo_path", "parameters": [{"description": "Path of the repository", "in": "path", "name": "repository", "required": true, "schema": {"format": "path", "type": "string"}}, {"description": "Container registry. All Red Hat containers use the value of 'registry.access.redhat.com' (regardless of whether they are shipped only to the terms-based registry at registry.redhat.io). Partner containers use the value of 'registry.connect.redhat.com'.", "in": "path", "name": "registry", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ProductListing"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ProductListing not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get product listings associated with repository.", "tags": ["Repositories"], "x-graphql-data-path": ["data", "find_repository_product_listings_by_registry_path"], "x-graphql-parameter-mapping": {"filter": "filter", "page": "page", "page_size": "page_size", "registry": "registry", "repository": "repository", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_repository_product_listings_by_registry_path", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ProductListing"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/repositories/registry/{registry}/repository/{repository}/projects/certification": {"get": {"operationId": "graphql.cert_projects.get_certification_project_by_repo", "parameters": [{"description": "Container registry. All Red Hat containers use the value of 'registry.access.redhat.com' (regardless of whether they are shipped only to the terms-based registry at registry.redhat.io). Partner containers use the value of 'registry.connect.redhat.com'.", "in": "path", "name": "registry", "required": true, "schema": {"type": "string"}}, {"description": "Path of the repository", "in": "path", "name": "repository", "required": true, "schema": {"format": "path", "type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CertificationProject"}}}, "description": "Success"}, "404": {"description": "CertificationProject not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get the certification project for a repository", "tags": ["Repositories"], "x-graphql-data-path": ["data", "get_repository_project_certification_by_registry_path", "data"], "x-graphql-parameter-mapping": {"registry": "registry", "repository": "repository"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_repository_project_certification_by_registry_path", "x-graphql-response": {"$ref": "#/components/schemas/CertificationProject"}}}, "/repositories/registry/{registry}/repository/{repository}/tag/{tag}": {"get": {"operationId": "graphql.images.get_images_by_repo_tag", "parameters": [{"description": "Container registry. All Red Hat containers use the value of 'registry.access.redhat.com' (regardless of whether they are shipped only to the terms-based registry at registry.redhat.io). Partner containers use the value of 'registry.connect.redhat.com'.", "in": "path", "name": "registry", "required": true, "schema": {"type": "string"}}, {"description": "Path of the repository", "in": "path", "name": "repository", "required": true, "schema": {"format": "path", "type": "string"}}, {"description": "Container image tag name.", "in": "path", "name": "tag", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerImage"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ContainerImage not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "List images for a repository + tag. Exclude total for improved performance.", "tags": ["Repositories"], "x-graphql-data-path": ["data", "find_repository_images_by_registry_path_tag"], "x-graphql-parameter-mapping": {"filter": "filter", "page": "page", "page_size": "page_size", "registry": "registry", "repository": "repository", "sort_by": "sort_by", "tag": "tag"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_repository_images_by_registry_path_tag", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerImage"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/repositories/registry/{registry}/repository/{repository}/vendor": {"get": {"operationId": "graphql.vendors.get_vendor_by_repo", "parameters": [{"description": "Container registry. All Red Hat containers use the value of 'registry.access.redhat.com' (regardless of whether they are shipped only to the terms-based registry at registry.redhat.io). Partner containers use the value of 'registry.connect.redhat.com'.", "in": "path", "name": "registry", "required": true, "schema": {"type": "string"}}, {"description": "Path of the repository", "in": "path", "name": "repository", "required": true, "schema": {"format": "path", "type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerVendor"}}}, "description": "Success"}, "404": {"description": "ContainerVendor not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get the vendor for a repository.", "tags": ["Repositories"], "x-graphql-data-path": ["data", "get_repository_vendor_by_registry_path", "data"], "x-graphql-parameter-mapping": {"registry": "registry", "repository": "repository"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_repository_vendor_by_registry_path", "x-graphql-response": {"$ref": "#/components/schemas/ContainerVendor"}}}, "/signatures/reference/{repository}@{manifest_digest}/signature-{non_zero_index}": {"get": {"operationId": "pyxis.rest.signatures.get_signature_binary_data_by_index", "parameters": [{"description": "Path of the repository", "in": "path", "name": "repository", "required": true, "schema": {"format": "path", "type": "string"}}, {"description": "Docker repository manifest digest with algo, e.g. `sha256:1a2b3c...` or `sha256=1a2b3c...`.", "in": "path", "name": "manifest_digest", "required": true, "schema": {"type": "string"}}, {"description": "Sequential identifier of an object starting with 1.", "in": "path", "name": "non_zero_index", "required": true, "schema": {"minimum": 1, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/octet-stream": {"schema": {"format": "binary", "type": "string"}}}, "description": "Success"}, "404": {"description": "Binary data not found"}}, "summary": "Get binary data for given signature (see https://github.com/containers/image/ blob/master/docs/signature-protocols.md).\nIt is recommended to use `?sort_by=last_update_date` to ensure the order.", "tags": ["Signatures"]}}, "/status/graphql": {"get": {"operationId": "pyxis.rest.health.graphql_status", "responses": {"200": {"content": {"text/plain": {"schema": {"type": "string"}}}, "description": "Success"}}, "summary": "GraphQL availability endpoint.", "tags": ["Status"]}}, "/status/logs": {"get": {"operationId": "pyxis.rest.health.forwarder_status", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ForwarderStatus"}}}, "description": "Success"}, "404": {"description": "ForwarderStatus not found"}}, "summary": "Log forwarder availability endpoint.", "tags": ["Status"]}}, "/tag-history": {"get": {"operationId": "graphql.tag_history.get_tag_histories", "parameters": [{"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerTagHistory"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ContainerTagHistory not found"}}, "security": [], "summary": "Get all tag histories. Exclude total for improved performance.", "tags": ["Tag history"], "x-graphql-data-path": ["data", "find_tag_histories"], "x-graphql-parameter-mapping": {"filter": "filter", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_tag_histories", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerTagHistory"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/tag-history/id/{identifier}": {"get": {"operationId": "graphql.tag_history.get_tag_history_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerTagHistory"}}}, "description": "Success"}, "404": {"description": "ContainerTagHistory not found"}}, "security": [], "summary": "Get a tag history by ID.", "tags": ["Tag history"], "x-graphql-data-path": ["data", "get_tag_history", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_tag_history", "x-graphql-response": {"$ref": "#/components/schemas/ContainerTagHistory"}}}, "/tag-history/id/{identifier}/images": {"get": {"operationId": "graphql.tag_history.get_tag_history_images", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerImage"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ContainerImage not found"}}, "security": [], "summary": "Get images for tag history that have or used to have the tag. Exclude total for improved performance.", "tags": ["Tag history"], "x-graphql-data-path": ["data", "find_tag_history_images"], "x-graphql-parameter-mapping": {"filter": "filter", "id": "identifier", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_tag_history_images", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerImage"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/tag-history/registry/{registry}/repository/{repository}/tag/{tag}": {"get": {"operationId": "graphql.tag_history.get_tag_history_by_tag_name", "parameters": [{"description": "Container registry. All Red Hat containers use the value of 'registry.access.redhat.com' (regardless of whether they are shipped only to the terms-based registry at registry.redhat.io). Partner containers use the value of 'registry.connect.redhat.com'.", "in": "path", "name": "registry", "required": true, "schema": {"type": "string"}}, {"description": "Path of the repository", "in": "path", "name": "repository", "required": true, "schema": {"format": "path", "type": "string"}}, {"description": "Container image tag name.", "in": "path", "name": "tag", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerTagHistory"}}}, "description": "Success"}, "404": {"description": "ContainerTagHistory not found"}}, "security": [], "summary": "Get a tag history by tag name.", "tags": ["Tag history"], "x-graphql-data-path": ["data", "get_tag_history_by_tag_name", "data"], "x-graphql-parameter-mapping": {"registry": "registry", "repository": "repository", "tag": "tag"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_tag_history_by_tag_name", "x-graphql-response": {"$ref": "#/components/schemas/ContainerTagHistory"}}}, "/tools": {"get": {"operationId": "graphql.tools.find_tools", "parameters": [{"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/Tool"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "Tool not found"}}, "security": [], "summary": "List of tools.", "tags": ["Tools"], "x-graphql-data-path": ["data", "find_tools"], "x-graphql-parameter-mapping": {"filter": "filter", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_tools", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/Tool"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/tools/id/{identifier}": {"get": {"operationId": "graphql.tools.get_tool", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Tool"}}}, "description": "Success"}, "404": {"description": "Tool not found"}}, "security": [], "summary": "Get a tool by ID.", "tags": ["Tools"], "x-graphql-data-path": ["data", "get_tool", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_tool", "x-graphql-response": {"$ref": "#/components/schemas/Tool"}}}, "/vendors/id/{identifier}": {"get": {"operationId": "graphql.vendors.get_vendor_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerVendor"}}}, "description": "Success"}, "404": {"description": "ContainerVendor not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get a vendor by ID.", "tags": ["Vendors"], "x-graphql-data-path": ["data", "get_vendor", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_vendor", "x-graphql-response": {"$ref": "#/components/schemas/ContainerVendor"}}, "patch": {"operationId": "graphql.vendors.patch_vendor", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerVendor"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerVendor"}}}, "description": "Success"}, "400": {"description": "Bad request for ContainerVendor"}, "404": {"description": "ContainerVendor not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Partially update a vendor.", "tags": ["Vendors"], "x-graphql-data-path": ["data", "update_vendor", "data"], "x-graphql-parameter-mapping": {"id": "identifier", "input": "body"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "update_vendor", "x-graphql-response": {"$ref": "#/components/schemas/ContainerVendor"}}}, "/vendors/label/{label}": {"get": {"operationId": "graphql.vendors.get_vendor_by_label", "parameters": [{"description": "Label of the vendor", "in": "path", "name": "label", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerVendor"}}}, "description": "Success"}, "404": {"description": "ContainerVendor not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get a vendor by label.", "tags": ["Vendors"], "x-graphql-data-path": ["data", "get_vendor_by_label", "data"], "x-graphql-parameter-mapping": {"label": "label"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_vendor_by_label", "x-graphql-response": {"$ref": "#/components/schemas/ContainerVendor"}}}, "/vendors/label/{label}/product-listings": {"get": {"operationId": "graphql.product_listings.get_product_listings_by_vendor_label", "parameters": [{"description": "Label of the vendor", "in": "path", "name": "label", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ProductListing"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ProductListing not found"}}, "security": [], "summary": "Get the product listings for a vendor by label.", "tags": ["Vendors"], "x-graphql-data-path": ["data", "find_vendor_product_listings_by_label"], "x-graphql-parameter-mapping": {"filter": "filter", "label": "label", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_vendor_product_listings_by_label", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ProductListing"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/vendors/label/{label}/repositories": {"get": {"operationId": "graphql.repos.get_repos_by_vendor_label", "parameters": [{"description": "Label of the vendor", "in": "path", "name": "label", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerRepository"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ContainerRepository not found"}}, "security": [], "summary": "Get the repositories for a vendor label.", "tags": ["Vendors"], "x-graphql-data-path": ["data", "find_vendor_repositories_by_label"], "x-graphql-parameter-mapping": {"filter": "filter", "label": "label", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_vendor_repositories_by_label", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ContainerRepository"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/vendors/org-id/{org_id}": {"get": {"operationId": "graphql.vendors.get_vendor_by_org_id", "parameters": [{"description": "Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect.", "in": "path", "name": "org_id", "required": true, "schema": {"type": "integer"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerVendor"}}}, "description": "Success"}, "404": {"description": "ContainerVendor not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get a vendor by Company Org ID.", "tags": ["Vendors"], "x-graphql-data-path": ["data", "get_vendor_by_org_id", "data"], "x-graphql-parameter-mapping": {"org_id": "org_id"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_vendor_by_org_id", "x-graphql-response": {"$ref": "#/components/schemas/ContainerVendor"}}}, "/vendors/org-id/{org_id}/product-listings": {"get": {"operationId": "graphql.product_listings.get_product_listings_by_org_id", "parameters": [{"description": "Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect.", "in": "path", "name": "org_id", "required": true, "schema": {"type": "integer"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ProductListing"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "ProductListing not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get the product listings for a vendor by Company Org ID.", "tags": ["Vendors"], "x-graphql-data-path": ["data", "find_vendor_product_listings_by_org_id"], "x-graphql-parameter-mapping": {"filter": "filter", "org_id": "org_id", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_vendor_product_listings_by_org_id", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ProductListing"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/vendors/org-id/{org_id}/projects/certification": {"get": {"operationId": "graphql.cert_projects.get_certification_projects_by_org_id", "parameters": [{"description": "Red Hat Org ID / account_id from Red Hat SSO. Also corresponds to company_org_id in Red Hat Connect.", "in": "path", "name": "org_id", "required": true, "schema": {"type": "integer"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Filter used to select results.", "in": "query", "name": "filter", "schema": {"type": "string"}}, {"description": "Size of the page that should be returned.", "in": "query", "name": "page_size", "required": false, "schema": {"default": 100, "maximum": 500, "minimum": 1, "type": "integer"}}, {"description": "Page that should be returned.", "in": "query", "name": "page", "required": false, "schema": {"default": 0, "minimum": 0, "type": "integer"}}, {"description": "Comma separated list of fields that are used to sort objects. Each field can be ordered in a descending (desc) or ascending (asc) order. The order can be defined for each key separately, e.g. key[asc],key[desc]. Default sorting order is ascending.", "in": "query", "name": "sort_by", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertificationProject"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "description": "Success"}, "404": {"description": "CertificationProject not found"}}, "security": [{"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get certification projects for a vendor by Company Org ID.", "tags": ["Vendors"], "x-graphql-data-path": ["data", "find_vendor_certification_projects_by_org_id"], "x-graphql-parameter-mapping": {"filter": "filter", "org_id": "org_id", "page": "page", "page_size": "page_size", "sort_by": "sort_by"}, "x-graphql-query": "{ {data} error {status detail} }", "x-graphql-query-name": "find_vendor_certification_projects_by_org_id", "x-graphql-response": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CertificationProject"}, "type": "array"}, "page": {"type": "integer"}, "page_size": {"type": "integer"}, "total": {"readOnly": true, "type": "integer"}}, "type": "object"}}}, "/vulnerabilities/id/{identifier}": {"get": {"operationId": "graphql.vulnerabilities.get_vulnerability_by_id", "parameters": [{"description": "ID of the resource.", "in": "path", "name": "identifier", "required": true, "schema": {"type": "string"}}, {"description": "Comma separated list of fields to include in the response. Use dot notation to define nested fields.", "in": "query", "name": "include", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}, "style": "form"}, {"description": "Comma separated list of fields to exclude in the response. Use dot notation to define nested fields.", "in": "query", "name": "exclude", "schema": {"default": [], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ContainerImageVulnerability"}}}, "description": "Success"}, "404": {"description": "ContainerImageVulnerability not found"}}, "security": [{}, {"JWT": []}, {"ApiKeyAuth": []}], "summary": "Get an image vulnerability by its ID.", "tags": ["Vulnerabilities"], "x-graphql-data-path": ["data", "get_image_vulnerability", "data"], "x-graphql-parameter-mapping": {"id": "identifier"}, "x-graphql-query": "{ data { {data} }  error {status detail} }", "x-graphql-query-name": "get_image_vulnerability", "x-graphql-response": {"$ref": "#/components/schemas/ContainerImageVulnerability"}}}}, "servers": [{"url": "https://catalog.redhat.com/api/containers/v1"}]}
